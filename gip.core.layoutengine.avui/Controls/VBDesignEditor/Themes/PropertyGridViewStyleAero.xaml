<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:local="clr-namespace:gip.core.layoutengine.avui"
   xmlns:Converters="clr-namespace:gip.ext.designer.avui.Converters;assembly=gip.ext.designer.avui"
             xmlns:PropertyGrid="clr-namespace:gip.ext.designer.avui.PropertyGrid;assembly=gip.ext.designer.avui"
             xmlns:PropertyGridBase="clr-namespace:gip.ext.design.avui.PropertyGrid;assembly=gip.ext.design.avui"
             xmlns:Controls="clr-namespace:gip.ext.designer.avui.Controls;assembly=gip.ext.designer.avui">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/gip.core.layoutengine.avui;Component/Controls/VBButton/Themes/ToggleButtonStyleAero.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ExpandButtonStyleAero"
		       TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
			        Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent">
                        <Border Width="9"
							        Height="9"
							        SnapsToDevicePixels="true"
							        BorderBrush="#FF7898B5"
							        BorderThickness="1"
							        CornerRadius="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,1"
										StartPoint="0,0">
                                    <GradientStop Color="White"
										              Offset=".2" />
                                    <GradientStop Color="#FFC0B7A6"
										              Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path Margin="1,1,1,1"
								      x:Name="ExpandPath"
								      Fill="Black"
								      Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
							         Value="True">
                            <Setter Property="Data"
								        TargetName="ExpandPath"
								        Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MoreButtonStyleAero"
		       TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
			        Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="#F9F9F4"
						        BorderThickness="0 0 0 1"
						        BorderBrush="{x:Static SystemColors.ControlBrush}">
                        <!--<local:VBTextBlock Text="More..."
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="18 0 0 0"
                                       Foreground="{x:Static SystemColors.ControlDarkBrush}" />-->
                        <Path x:Name="arrow"
							      Data="M 0 0 L 5 5 L 10 0"
							      HorizontalAlignment="Center"
							      VerticalAlignment="Center"
							      Fill="{x:Static SystemColors.ControlDarkBrush}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
							         Value="True">
                            <Setter TargetName="arrow"
								        Property="Data"
								        Value="M 0 5 L 5 0 L 10 5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CategoryToggleStyleAero"
		       TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
			        Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="0 1 0 0"
						        BorderBrush="#ECE9D8">
                        <StackPanel Orientation="Horizontal"
							            Background="#FFAAAAAA">
                            <ToggleButton Style="{StaticResource ExpandButtonStyleAero}"
								              IsChecked="{Binding IsExpanded}"
								              VerticalAlignment="Center"
								              Margin="3 0 7 0" />
                            <local:VBTextBlock Text="{Binding Name}"
								           VerticalAlignment="Center"
								           FontWeight="Bold"
								           Foreground="Black" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CategoryExpanderStyleAero"
		       TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <local:VBDockPanel>
                        <ToggleButton Height="17"
							              IsChecked="{Binding IsExpanded}"
							              DockPanel.Dock="Top"
							              Style="{StaticResource CategoryToggleStyleAero}" />
                        <ContentPresenter x:Name="ExpandSite"
								Visibility="Collapsed" />
                    </local:VBDockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
							         Value="True">
                            <Setter Property="Visibility"
								        Value="Visible"
								        TargetName="ExpandSite" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MoreExpanderStyleAero"
		       TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <local:VBDockPanel IsBackgroundPanel="true">
                        <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							              Style="{StaticResource MoreButtonStyleAero}"
							              DockPanel.Dock="Top"
							              Height="12" />
                        <ContentPresenter x:Name="ExpandSite"
								Visibility="Collapsed" />
                    </local:VBDockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
							         Value="True">
                            <Setter Property="Visibility"
								        Value="Visible"
								        TargetName="ExpandSite" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AsGrid" TargetType="{x:Type local:VBPropertyGridView}">
        <DockPanel>
            <local:VBGrid DockPanel.Dock="Top" Visibility="{TemplateBinding FilterVisibility}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <local:VBTextBlock Text="Name:" Grid.Column="0" Grid.Row="0"/>
                <local:VBTextBlock Text="Type:" Grid.Column="0" Grid.Row="1"/>
                <local:VBTextBlock Text="Filter:" Grid.Column="0" Grid.Row="2"/>

                <local:VBTextBox x:Name="PART_NameTextBox" ShowCaption="False" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="0"
				                        Text="{Binding Name}"
				                        IsEnabled="{Binding IsNameEnabled}">
                    <local:VBTextBox.Style>
                        <Style BasedOn="{local:VBStaticResource {x:Type local:VBTextBox}}" TargetType="{x:Type local:VBTextBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsNameCorrect}"
							             Value="False">
                                    <Setter Property="BorderBrush"
								        Value="Red" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsNameEnabled}"
									           Value="True" />
                                        <Condition Binding="{Binding CurrentTab}"
									           Value="Events" />
                                        <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}}"
									           Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderBrush"
								        Value="Red" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </local:VBTextBox.Style>
                </local:VBTextBox>

                <local:VBTextBlock Text="{Binding SingleItem.ComponentType.Name}" ToolTip="{Binding SingleItem.ComponentType}" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" />
                <local:VBTextBox  ShowCaption="False" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="2" />
                <local:VBButton x:Name="PART_clearButton" Content="Clear" Grid.Column="2" Grid.Row="2"/>
            </local:VBGrid>

            <Controls:EnumBar Value="{Binding CurrentTab}"
			                Container="{Binding ElementName=c1}"
			                Margin="5 0 0 5"
			                DockPanel.Dock="Top"
                            ButtonStyle="{StaticResource ToggleButtonStyleAero}">
                <!--<Controls:EnumBar.ButtonStyle>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Width" Value="70" />
                                </Style>
                            </Controls:EnumBar.ButtonStyle>-->
            </Controls:EnumBar>

            <Grid x:Name="c1"
		                    Background="{StaticResource {ComponentResourceKey ResourceId=AppDark, TypeInTargetAssembly={x:Type local:VBCustomControl}}}">
                <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Categories}" x:Name="c1Categories" />
                </local:VBScrollViewer>
                <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Events}" x:Name="c1Events" />
                </local:VBScrollViewer>
                <Thumb x:Name="PART_Thumb"
			                       HorizontalAlignment="Left"
			                       Width="4"
			                       Margin="-2 0 0 0"
			                       Cursor="SizeWE">
                    <Thumb.RenderTransform>
                        <TranslateTransform X="{Binding FirstColumnWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:VBPropertyGridView}}" />
                    </Thumb.RenderTransform>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </Grid>

        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowEnumBar" Value="OnlyProperties">
                <Setter TargetName="c1Events" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="ShowEnumBar" Value="OnlyEvents">
                <Setter TargetName="c1Categories" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
        <ControlTemplate.Resources>
            <DataTemplate DataType="{x:Type PropertyGridBase:Category}">
                <Expander Header="{Binding Name}"
			                      Style="{StaticResource CategoryExpanderStyleAero}"
			                      IsExpanded="{Binding IsExpanded}"
			                      Visibility="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <ItemsControl ItemsSource="{Binding Properties}" />
                </Expander>
            </DataTemplate>

            <DataTemplate DataType="{x:Type PropertyGridBase:PropertyNode}">
                <StackPanel Visibility="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <Border x:Name="uxPropertyNodeRow"
				                    MinHeight="20"
				                    BorderThickness="0 0 0 1"
				                    BorderBrush="{x:Static SystemColors.ControlBrush}"
				                    DockPanel.Dock="Top">
                        <local:VBDockPanel>
                            <local:VBDockPanel Width="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PropertyGrid:PropertyGridView}}}"
						                        DockPanel.Dock="Left">
                                <ToggleButton x:Name="expandButton"
							                      DockPanel.Dock="Left"
							                      Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}"
							                      Style="{StaticResource ExpandButtonStyleAero}"
							                      IsChecked="{Binding IsExpanded}"
							                      Visibility="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
                                <local:VBTextBlock Text="{Binding Name}"
							                   TextTrimming="CharacterEllipsis"
							                   VerticalAlignment="Center"
							                   Margin="7 0 0 0"
							                   ToolTip="{Binding Description}"
							                   FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}" />
                                <!--Foreground="{Binding NameForeground}" />-->
                            </local:VBDockPanel>
                            <Border BorderThickness="1 0 0 0"
						                        BorderBrush="{x:Static SystemColors.ControlBrush}">
                                <ContentPresenter x:Name="editorContainer"
								                    Content="{Binding Editor}"
								                    VerticalAlignment="Center"
								                    Margin="3 0" />
                            </Border>
                        </local:VBDockPanel>
                    </Border>
                    <StackPanel Visibility="{Binding IsExpanded, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                        <ItemsControl ItemsSource="{Binding Children}"
					                        Visibility="{Binding Children.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}" />
                        <Expander Visibility="{Binding MoreChildren.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}"
					                        Style="{StaticResource MoreExpanderStyleAero}">
                            <ItemsControl ItemsSource="{Binding MoreChildren}"
						                        Background="#F9F9F4" />
                        </Expander>
                    </StackPanel>
                </StackPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled}"
				                        Value="False">
                        <Setter TargetName="editorContainer" Property="Opacity" Value="0.5" />
                        <!--<Setter TargetName="editorContainer" Property="IsHitTestVisible" Value="False" />-->
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ControlTemplate.Resources>
    </ControlTemplate>

    <ControlTemplate x:Key="AsListbox" TargetType="{x:Type local:VBPropertyGridView}">
        <DockPanel>
            <local:VBGrid DockPanel.Dock="Top" Visibility="{TemplateBinding FilterVisibility}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <local:VBTextBlock Text="Filter:" Grid.Column="0" Grid.Row="0"/>
                <local:VBTextBox  ShowCaption="False" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="0" />
                <local:VBButton x:Name="PART_clearButton" Content="Clear" Grid.Column="2" Grid.Row="0"/>
            </local:VBGrid>

            <Controls:EnumBar Value="{Binding CurrentTab}"
			                Container="{Binding ElementName=c1}"
			                Margin="5 0 0 5"
			                DockPanel.Dock="Top"
                            ButtonStyle="{StaticResource ToggleButtonStyleAero}">
                <!--<Controls:EnumBar.ButtonStyle>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Width" Value="70" />
                                </Style>
                            </Controls:EnumBar.ButtonStyle>-->
            </Controls:EnumBar>

            <local:VBGrid x:Name="c1"
		                    Background="{StaticResource {ComponentResourceKey ResourceId=AppDark, TypeInTargetAssembly={x:Type local:VBCustomControl}}}"
                          Margin="5,0,5,0">
                <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Categories}" x:Name="c1Categories" />
                </local:VBScrollViewer>
                <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Events}" x:Name="c1Events" />
                </local:VBScrollViewer>
                <Thumb x:Name="PART_Thumb"
			                       HorizontalAlignment="Left"
			                       Width="4"
			                       Margin="-2 0 0 0"
			                       Cursor="SizeWE">
                    <Thumb.RenderTransform>
                        <TranslateTransform X="{Binding FirstColumnWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:VBPropertyGridView}}" />
                    </Thumb.RenderTransform>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </local:VBGrid>

        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowEnumBar" Value="OnlyProperties">
                <Setter TargetName="c1Events" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="ShowEnumBar" Value="OnlyEvents">
                <Setter TargetName="c1Categories" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
        <ControlTemplate.Resources>
            <DataTemplate DataType="{x:Type PropertyGridBase:Category}">
                <Expander Header="{Binding Name}"
			                      Style="{StaticResource CategoryExpanderStyleAero}"
			                      IsExpanded="{Binding IsExpanded}"
			                      Visibility="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <local:VBListBox ItemsSource="{Binding Properties}" SelectedItem="{Binding SelectedNode, Mode=OneWayToSource}" ShowCaption="False" />
                </Expander>
            </DataTemplate>

            <DataTemplate DataType="{x:Type PropertyGridBase:PropertyNode}">
                <StackPanel Visibility="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <Border x:Name="uxPropertyNodeRow"
				                    MinHeight="20"
				                    DockPanel.Dock="Top">
                        <DockPanel Width="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PropertyGrid:PropertyGridView}}}"
						                    DockPanel.Dock="Left">
                            <ToggleButton x:Name="expandButton"
							                    DockPanel.Dock="Left"
							                    Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}"
							                    Style="{StaticResource ExpandButtonStyleAero}"
							                    IsChecked="{Binding IsExpanded}"
							                    Visibility="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
                            <local:VBTextBlock Text="{Binding Name}"
							                TextTrimming="CharacterEllipsis"
							                VerticalAlignment="Center"
							                Margin="7 0 0 0"
							                ToolTip="{Binding Description}"
							                FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}" />
                            <!--Foreground="{Binding NameForeground}" />-->
                        </DockPanel>
                    </Border>
                </StackPanel>
                <!--<DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled}"
				                        Value="False">
                        <Setter TargetName="editorContainer" Property="Opacity" Value="0.5" />-->
                <!--<Setter TargetName="editorContainer" Property="IsHitTestVisible" Value="False" />-->
                <!--</DataTrigger>
                </DataTemplate.Triggers>-->
            </DataTemplate>

        </ControlTemplate.Resources>
    </ControlTemplate>

    <ControlTemplate x:Key="OnlyPropertyGrid" TargetType="{x:Type local:VBPropertyGridView}">
        <DockPanel>
            <Grid x:Name="c1"
		                    Background="{StaticResource {ComponentResourceKey ResourceId=AppDark, TypeInTargetAssembly={x:Type local:VBCustomControl}}}">
                <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Categories}" x:Name="c1Categories" />
                </local:VBScrollViewer>
                <Thumb x:Name="PART_Thumb"
			                       HorizontalAlignment="Left"
			                       Width="4"
			                       Margin="-2 0 0 0"
			                       Cursor="SizeWE">
                    <Thumb.RenderTransform>
                        <TranslateTransform X="{Binding FirstColumnWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:VBPropertyGridView}}" />
                    </Thumb.RenderTransform>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </Grid>

        </DockPanel>
        <ControlTemplate.Resources>
            <DataTemplate DataType="{x:Type PropertyGridBase:Category}">
                <Expander Header="{Binding Name}"
			                      Style="{StaticResource CategoryExpanderStyleAero}"
			                      IsExpanded="{Binding IsExpanded}"
			                      Visibility="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <ItemsControl ItemsSource="{Binding Properties}" />
                </Expander>
            </DataTemplate>

            <DataTemplate DataType="{x:Type PropertyGridBase:PropertyNode}">
                <StackPanel Visibility="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <Border x:Name="uxPropertyNodeRow"
				                    MinHeight="20"
				                    BorderThickness="0 0 0 1"
				                    BorderBrush="{x:Static SystemColors.ControlBrush}"
				                    DockPanel.Dock="Top">
                        <local:VBDockPanel>
                            <local:VBDockPanel Width="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PropertyGrid:PropertyGridView}}}"
						                        DockPanel.Dock="Left">
                                <ToggleButton x:Name="expandButton"
							                      DockPanel.Dock="Left"
							                      Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}"
							                      Style="{StaticResource ExpandButtonStyleAero}"
							                      IsChecked="{Binding IsExpanded}"
							                      Visibility="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
                                <local:VBTextBlock Text="{Binding Name}"
							                   TextTrimming="CharacterEllipsis"
							                   VerticalAlignment="Center"
							                   Margin="7 0 0 0"
							                   ToolTip="{Binding Description}"
							                   FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}" />
                                <!--Foreground="{Binding NameForeground}" />-->
                            </local:VBDockPanel>
                            <Border BorderThickness="1 0 0 0"
						                        BorderBrush="{x:Static SystemColors.ControlBrush}">
                                <ContentPresenter x:Name="editorContainer"
								                    Content="{Binding Editor}"
								                    VerticalAlignment="Center"
								                    Margin="3 0" />
                            </Border>
                        </local:VBDockPanel>
                    </Border>
                    <StackPanel Visibility="{Binding IsExpanded, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                        <ItemsControl ItemsSource="{Binding Children}"
					                        Visibility="{Binding Children.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}" />
                        <Expander Visibility="{Binding MoreChildren.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}"
					                        Style="{StaticResource MoreExpanderStyleAero}">
                            <ItemsControl ItemsSource="{Binding MoreChildren}"
						                        Background="#F9F9F4" />
                        </Expander>
                    </StackPanel>
                </StackPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled}"
				                        Value="False">
                        <Setter TargetName="editorContainer" Property="Opacity" Value="0.5" />
                        <!--<Setter TargetName="editorContainer" Property="IsHitTestVisible" Value="False" />-->
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ControlTemplate.Resources>
    </ControlTemplate>


    <Style x:Key="PropertyGridViewStyleAero" TargetType="{x:Type local:VBPropertyGridView}">
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="FirstColumnWidth" Value="100"/>
        <Setter Property="Template" Value="{StaticResource AsGrid}" />
        <Style.Triggers>
            <Trigger Property="ShowAs" Value="AsListbox">
                <Setter Property="Template" Value="{StaticResource AsListbox}"/>
            </Trigger>
            <Trigger Property="ShowAs" Value="OnlyPropertyGrid">
                <Setter Property="Template" Value="{StaticResource OnlyPropertyGrid}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>

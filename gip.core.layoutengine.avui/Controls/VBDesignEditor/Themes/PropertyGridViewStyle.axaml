<ResourceDictionary
   xmlns="https://github.com/avaloniaui"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:local="clr-namespace:gip.core.layoutengine.avui"
   xmlns:Converters="clr-namespace:gip.ext.designer.avui.Converters;assembly=gip.ext.designer.avui"
             xmlns:PropertyGrid="clr-namespace:gip.ext.designer.avui.PropertyGrid;assembly=gip.ext.designer.avui"
             xmlns:PropertyGridBase="clr-namespace:gip.ext.design.avui.PropertyGrid;assembly=gip.ext.design.avui"
             xmlns:Controls="clr-namespace:gip.ext.designer.avui.Controls;assembly=gip.ext.designer.avui">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/gip.core.layoutengine.avui;Component/Controls/VBButton/Themes/ToggleButtonStyle.axaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="AsGrid" TargetType="{x:Type local:VBPropertyGridView}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Filter section -->
            <local:VBGrid Grid.Row="0" IsVisible="{TemplateBinding FilterVisibility}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <local:VBTextBlock Text="Name:" Grid.Column="0" Grid.Row="0"/>
                <local:VBTextBlock Text="Type:" Grid.Column="0" Grid.Row="1"/>
                <local:VBTextBlock Text="Filter:" Grid.Column="0" Grid.Row="2"/>

                <local:VBTextBox x:Name="PART_NameTextBox" ShowCaption="False" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="0"
				                        Text="{Binding Name}"
				                        IsEnabled="{Binding IsNameEnabled}" />

                <local:VBTextBlock Text="{Binding SingleItem.ComponentType.Name}" ToolTip.Tip="{Binding SingleItem.ComponentType}" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" />
                <local:VBTextBox  ShowCaption="False" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="2" />
                <local:VBButton x:Name="PART_clearButton" Content="Clear" Grid.Column="2" Grid.Row="2"/>
            </local:VBGrid>

            <!-- EnumBar section -->
            <Controls:EnumBar Grid.Row="1" Value="{Binding CurrentTab}"
			                Container="{Binding ElementName=c1}"
			                Margin="5 0 0 5"
                            ButtonStyle="{StaticResource ToggleButtonStyle}" />

            <!-- Content section -->
            <Grid x:Name="c1" Grid.Row="2"
		                    Background="{StaticResource {ComponentResourceKey ResourceId=AppDark, TypeInTargetAssembly={x:Type local:VBCustomControl}}}">
                <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Categories}" x:Name="c1Categories" />
                </local:VBScrollViewer>
                <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Events}" x:Name="c1Events" />
                </local:VBScrollViewer>
                <Thumb x:Name="PART_Thumb"
			                       HorizontalAlignment="Left"
			                       Width="4"
			                       Margin="-2 0 0 0"
			                       Cursor="SizeWE">
                    <Thumb.RenderTransform>
                        <TranslateTransform X="{Binding FirstColumnWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:VBPropertyGridView}}" />
                    </Thumb.RenderTransform>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </Grid>

        </Grid>
        <ControlTemplate.DataTemplates>
            <DataTemplate DataType="{x:Type PropertyGridBase:Category}">
                <Expander Header="{Binding Name}"
			                      Classes="CategoryExpanderStyle"
			                      IsExpanded="{Binding IsExpanded}"
			                      IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <ItemsControl ItemsSource="{Binding Properties}" />
                </Expander>
            </DataTemplate>

            <DataTemplate DataType="{x:Type PropertyGridBase:PropertyNode}">
                <StackPanel IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <Border x:Name="uxPropertyNodeRow"
				                    MinHeight="20"
				                    BorderThickness="0 0 0 1"
				                    BorderBrush="{DynamicResource SystemControlBackgroundBaseLowBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PropertyGrid:PropertyGridView}}}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="expandButton"
							                      Grid.Column="0"
							                      Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}"
							                      Classes="ExpandButtonStyle"
							                      IsChecked="{Binding IsExpanded}"
							                      IsVisible="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
                                <local:VBTextBlock Grid.Column="1" Text="{Binding Name}"
							                   TextTrimming="CharacterEllipsis"
							                   VerticalAlignment="Center"
							                   Margin="7 0 0 0"
							                   ToolTip.Tip="{Binding Description}"
							                   FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}" />
                            </Grid>
                            <Border Grid.Column="1" BorderThickness="1 0 0 0"
						                        BorderBrush="{DynamicResource SystemControlBackgroundBaseLowBrush}">
                                <ContentPresenter x:Name="editorContainer"
								                    Content="{Binding Editor}"
								                    VerticalAlignment="Center"
								                    Margin="3 0" 
								                    Opacity="{Binding IsEnabled, Converter={x:Static Converters:OpacityWhenDisabled.Instance}}" />
                            </Border>
                        </Grid>
                    </Border>
                    <StackPanel IsVisible="{Binding IsExpanded, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                        <ItemsControl ItemsSource="{Binding Children}"
					                        IsVisible="{Binding Children.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}" />
                        <Expander IsVisible="{Binding MoreChildren.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}"
					                        Classes="MoreExpanderStyle">
                            <ItemsControl ItemsSource="{Binding MoreChildren}"
						                        Background="#F9F9F4" />
                        </Expander>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
        </ControlTemplate.DataTemplates>
    </ControlTemplate>

    <ControlTemplate x:Key="AsListbox" TargetType="{x:Type local:VBPropertyGridView}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Filter section -->
            <local:VBGrid Grid.Row="0" IsVisible="{TemplateBinding FilterVisibility}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <local:VBTextBlock Text="Filter:" Grid.Column="0" Grid.Row="0"/>
                <local:VBTextBox  ShowCaption="False" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="0" />
                <local:VBButton x:Name="PART_clearButton" Content="Clear" Grid.Column="2" Grid.Row="0"/>
            </local:VBGrid>

            <!-- EnumBar section -->
            <Controls:EnumBar Grid.Row="1" Value="{Binding CurrentTab}"
			                Container="{Binding ElementName=c1}"
			                Margin="5 0 0 5"
                            ButtonStyle="{StaticResource ToggleButtonStyle}" />

            <!-- Content section -->
            <local:VBGrid x:Name="c1" Grid.Row="2"
		                    Background="{StaticResource {ComponentResourceKey ResourceId=AppDark, TypeInTargetAssembly={x:Type local:VBCustomControl}}}"
                          Margin="5,0,5,0">
                <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Categories}" x:Name="c1Categories" />
                </local:VBScrollViewer>
                <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Events}" x:Name="c1Events" />
                </local:VBScrollViewer>
                <Thumb x:Name="PART_Thumb"
			                       HorizontalAlignment="Left"
			                       Width="4"
			                       Margin="-2 0 0 0"
			                       Cursor="SizeWE">
                    <Thumb.RenderTransform>
                        <TranslateTransform X="{Binding FirstColumnWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:VBPropertyGridView}}" />
                    </Thumb.RenderTransform>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </local:VBGrid>

        </Grid>
        <ControlTemplate.DataTemplates>
            <DataTemplate DataType="{x:Type PropertyGridBase:Category}">
                <Expander Header="{Binding Name}"
			                      Classes="CategoryExpanderStyle"
			                      IsExpanded="{Binding IsExpanded}"
			                      IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <local:VBListBox ItemsSource="{Binding Properties}" SelectedItem="{Binding SelectedNode, Mode=OneWayToSource}" ShowCaption="False" />
                </Expander>
            </DataTemplate>

            <DataTemplate DataType="{x:Type PropertyGridBase:PropertyNode}">
                <StackPanel IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <Border x:Name="uxPropertyNodeRow"
				                    MinHeight="20">
                        <Grid Width="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PropertyGrid:PropertyGridView}}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ToggleButton x:Name="expandButton"
							                    Grid.Column="0"
							                    Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}"
							                    Classes="ExpandButtonStyle"
							                    IsChecked="{Binding IsExpanded}"
							                    IsVisible="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
                            <local:VBTextBlock Grid.Column="1" Text="{Binding Name}"
							                TextTrimming="CharacterEllipsis"
							                VerticalAlignment="Center"
							                Margin="7 0 0 0"
							                ToolTip.Tip="{Binding Description}"
							                FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}" />
                        </Grid>
                    </Border>
                </StackPanel>
            </DataTemplate>
        </ControlTemplate.DataTemplates>
    </ControlTemplate>

    <ControlTemplate x:Key="OnlyPropertyGrid" TargetType="{x:Type local:VBPropertyGridView}">
        <Grid x:Name="c1"
		                    Background="{StaticResource {ComponentResourceKey ResourceId=AppDark, TypeInTargetAssembly={x:Type local:VBCustomControl}}}">
            <local:VBScrollViewer HorizontalScrollBarVisibility="Disabled">
                <ItemsControl ItemsSource="{Binding Categories}" x:Name="c1Categories" />
            </local:VBScrollViewer>
            <Thumb x:Name="PART_Thumb"
			                       HorizontalAlignment="Left"
			                       Width="4"
			                       Margin="-2 0 0 0"
			                       Cursor="SizeWE">
                <Thumb.RenderTransform>
                    <TranslateTransform X="{Binding FirstColumnWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:VBPropertyGridView}}" />
                </Thumb.RenderTransform>
                <Thumb.Template>
                    <ControlTemplate>
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Thumb.Template>
            </Thumb>
        </Grid>
        <ControlTemplate.DataTemplates>
            <DataTemplate DataType="{x:Type PropertyGridBase:Category}">
                <Expander Header="{Binding Name}"
			                      Classes="CategoryExpanderStyle"
			                      IsExpanded="{Binding IsExpanded}"
			                      IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <ItemsControl ItemsSource="{Binding Properties}" />
                </Expander>
            </DataTemplate>

            <DataTemplate DataType="{x:Type PropertyGridBase:PropertyNode}">
                <StackPanel IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                    <Border x:Name="uxPropertyNodeRow"
				                    MinHeight="20"
				                    BorderThickness="0 0 0 1"
				                    BorderBrush="{DynamicResource SystemControlBackgroundBaseLowBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PropertyGrid:PropertyGridView}}}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="expandButton"
							                      Grid.Column="0"
							                      Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}"
							                      Classes="ExpandButtonStyle"
							                      IsChecked="{Binding IsExpanded}"
							                      IsVisible="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
                                <local:VBTextBlock Grid.Column="1" Text="{Binding Name}"
							                   TextTrimming="CharacterEllipsis"
							                   VerticalAlignment="Center"
							                   Margin="7 0 0 0"
							                   ToolTip.Tip="{Binding Description}"
							                   FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}" />
                            </Grid>
                            <Border Grid.Column="1" BorderThickness="1 0 0 0"
						                        BorderBrush="{DynamicResource SystemControlBackgroundBaseLowBrush}">
                                <ContentPresenter x:Name="editorContainer"
								                    Content="{Binding Editor}"
								                    VerticalAlignment="Center"
								                    Margin="3 0" 
								                    Opacity="{Binding IsEnabled, Converter={x:Static Converters:OpacityWhenDisabled.Instance}}" />
                            </Border>
                        </Grid>
                    </Border>
                    <StackPanel IsVisible="{Binding IsExpanded, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                        <ItemsControl ItemsSource="{Binding Children}"
					                        IsVisible="{Binding Children.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}" />
                        <Expander IsVisible="{Binding MoreChildren.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}"
					                        Classes="MoreExpanderStyle">
                            <ItemsControl ItemsSource="{Binding MoreChildren}"
						                        Background="#F9F9F4" />
                        </Expander>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
        </ControlTemplate.DataTemplates>
    </ControlTemplate>

    <ControlTheme x:Key="{x:Type local:VBPropertyGridView}" TargetType="{x:Type local:VBPropertyGridView}">
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="FirstColumnWidth" Value="100"/>
        <Setter Property="Template" Value="{StaticResource AsGrid}" />

        <!-- Nested pseudo classes and styles within the ControlTheme -->
        
        <!-- ExpandButtonStyle -->
        <ControlTheme.Resources>
            <Style x:Key="ExpandButtonStyle" Selector="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <ControlTemplate>
                        <Border Background="Transparent">
                            <Border Width="9"
							        Height="9"
							        BorderBrush="#FF7898B5"
							        BorderThickness="1"
							        CornerRadius="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="White" Offset=".2" />
                                        <GradientStop Color="#FFC0B7A6" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path Margin="1,1,1,1"
								      x:Name="ExpandPath"
								      Fill="Black"
								      Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" />
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter>
            </Style>
            
            <Style x:Key="ExpandButtonStyleChecked" Selector="ToggleButton.ExpandButtonStyle:checked /template/ Path#ExpandPath">
                <Setter Property="Data" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
            </Style>

            <!-- MoreButtonStyle -->
            <Style x:Key="MoreButtonStyle" Selector="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <ControlTemplate>
                        <Border Background="#F9F9F4"
						        BorderThickness="0 0 0 1"
						        BorderBrush="{DynamicResource SystemControlBackgroundBaseLowBrush}">
                            <Path x:Name="arrow"
							      Data="M 0 0 L 5 5 L 10 0"
							      HorizontalAlignment="Center"
							      VerticalAlignment="Center"
							      Fill="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
                        </Border>
                    </ControlTemplate>
                </Setter>
            </Style>
            
            <Style x:Key="MoreButtonStyleChecked" Selector="ToggleButton.MoreButtonStyle:checked /template/ Path#arrow">
                <Setter Property="Data" Value="M 0 5 L 5 0 L 10 5" />
            </Style>

            <!-- CategoryToggleStyle -->
            <Style x:Key="CategoryToggleStyle" Selector="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <ControlTemplate>
                        <Border BorderThickness="0 1 0 0"
						        BorderBrush="#ECE9D8">
                            <StackPanel Orientation="Horizontal"
							            Background="#FFAAAAAA">
                                <ToggleButton Classes="ExpandButtonStyle"
								              IsChecked="{Binding IsExpanded}"
								              VerticalAlignment="Center"
								              Margin="3 0 7 0" />
                                <local:VBTextBlock Text="{Binding Name}"
								           VerticalAlignment="Center"
								           FontWeight="Bold"
								           Foreground="Black" />
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter>
            </Style>

            <!-- CategoryExpanderStyle -->
            <Style x:Key="CategoryExpanderStyle" Selector="Expander">
                <Setter Property="Template">
                    <ControlTemplate TargetType="Expander">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ToggleButton Grid.Row="0" Height="17"
							              IsChecked="{Binding IsExpanded}"
							              Classes="CategoryToggleStyle" />
                            <ContentPresenter Grid.Row="1" x:Name="ExpandSite"
								IsVisible="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter>
            </Style>

            <!-- MoreExpanderStyle -->
            <Style x:Key="MoreExpanderStyle" Selector="Expander">
                <Setter Property="Template">
                    <ControlTemplate TargetType="Expander">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ToggleButton Grid.Row="0" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							              Classes="MoreButtonStyle"
							              Height="12" />
                            <ContentPresenter Grid.Row="1" x:Name="ExpandSite"
								IsVisible="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter>
            </Style>
        </ControlTheme.Resources>

        <!-- Template triggers converted to pseudo classes -->
        <Style Selector="^[ShowAs=AsListbox]">
            <Setter Property="Template" Value="{StaticResource AsListbox}"/>
        </Style>
        <Style Selector="^[ShowAs=OnlyPropertyGrid]">
            <Setter Property="Template" Value="{StaticResource OnlyPropertyGrid}"/>
        </Style>
        
        <!-- ShowEnumBar visibility styles -->
        <Style Selector="^ /template/ ItemsControl#c1Events[ShowEnumBar=OnlyProperties]">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
        <Style Selector="^ /template/ ItemsControl#c1Categories[ShowEnumBar=OnlyEvents]">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
    </ControlTheme>
</ResourceDictionary>

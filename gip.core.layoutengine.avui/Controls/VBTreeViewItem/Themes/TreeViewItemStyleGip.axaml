<ResourceDictionary
   xmlns="https://github.com/avaloniaui"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:local="clr-namespace:gip.core.layoutengine.avui">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Controls/DarkThemeColors.axaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <RadialGradientBrush x:Key="TreeArrowFocusFillGip" Center="0.5,0.5" RadiusX="1" GradientOrigin="0.5,0.5" RadiusY="1">
        <GradientStop Color="#FFE99393" Offset="0.228"/>
        <GradientStop Color="#FFFF0018" Offset="1"/>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="TreeArrowCheckedFillGip" Center="0.5,0.5" RadiusX="1" GradientOrigin="0.5,0.5" RadiusY="1">
        <GradientStop Color="#FF505050"/>
        <GradientStop Color="White" Offset="0.732"/>
    </RadialGradientBrush>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,8 L8,0 z"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="22" Padding="5,7,5,5" Width="20">
                        <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FFFF0000"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeArrowFocusFillGip}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FFFF0000"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeArrowFocusFillGip}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FFFFFFFF"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeArrowCheckedFillGip}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<SolidColorBrush x:Key="TreeViewItemSelectionFillGip" Color="{StaticResource {ComponentResourceKey ResourceId=ColorAppLight, TypeInTargetAssembly={x:Type local:VBCustomControl}}}"/>-->
    <!--<SolidColorBrush x:Key="TreeViewItemSelectionNotActiveFillGip" Color="{StaticResource {ComponentResourceKey ResourceId=ColorAppLight, TypeInTargetAssembly={x:Type local:VBCustomControl}}}"/>-->

    
    <LinearGradientBrush x:Key="TreeViewItemSelectionFillGip" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF828282" Offset="0"/>
        <GradientStop Color="#FF825555" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TreeViewItemSelectionNotActiveFillGip" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF828282" Offset="0"/>
        <GradientStop Color="#FF825555" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TreeViewItemSelectionFgGip" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="TreeViewItemFgGip" Color="#FFFFFFFF"/>

    <Style x:Key="TreeViewItemStyleGip" TargetType="{x:Type local:VBTreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VBTreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" 
								ClickMode="Press" 
								IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
								Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <Border x:Name="Bd" 
								BorderBrush="{TemplateBinding BorderBrush}" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								Background="{TemplateBinding Background}" 
								Grid.Column="1" 
								CornerRadius="4"
								Padding="{TemplateBinding Padding}" 
								SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" 
									ContentSource="Header" 
									Margin="6,0,6,0"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TreeViewItemSelectionFillGip}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF0000"/>
                            <Setter Property="Foreground" Value="{StaticResource TreeViewItemSelectionFgGip}"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TreeViewItemSelectionNotActiveFillGip}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF0000"/>
                            <Setter Property="Foreground" Value="{StaticResource TreeViewItemSelectionFgGip}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>

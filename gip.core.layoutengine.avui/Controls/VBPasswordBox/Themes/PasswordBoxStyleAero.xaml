<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:local="clr-namespace:gip.core.layoutengine.avui">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/gip.core.layoutengine.avui;Component/Controls/Shared.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="PasswordBoxBgEnabled" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="PasswordBoxFgEnabled" Color="#FF000000"/>
    <SolidColorBrush x:Key="PasswordBoxFgEnabledFocus" Color="#FF000000"/>
    <RadialGradientBrush x:Key="PasswordBoxBorderEnabled" Center="0.85,0.9" RadiusX="0.9" GradientOrigin="0.8,0.8" RadiusY="0.8" >
        <GradientStop Color="#FFC5C5C6" Offset="0.2"/>
        <GradientStop Color="#FF666666" Offset="0.8"/>
        <GradientStop Color="Black" Offset="1"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="PasswordBoxBgDisabled" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="PasswordBoxFgDisabled" Color="#FF404040"/>
    <RadialGradientBrush x:Key="PasswordBoxBorderDisabled" Center="0.8,0.8" RadiusX="1" GradientOrigin="0.7,0.8" RadiusY="0.8" >
        <GradientStop Color="#FFC5C5C6" Offset="0.2"/>
        <GradientStop Color="#FF666666" Offset="0.5"/>
        <GradientStop Color="Black" Offset="1"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="PasswordBoxBgRequired" Color="#FF1A1A1A"/>
    <SolidColorBrush x:Key="PasswordBoxFgRequired" Color="#FF000000"/>
    <SolidColorBrush x:Key="PasswordBoxFgRequiredFocus" Color="Yellow"/>
    <RadialGradientBrush x:Key="PasswordBoxBorderRequired" Center="0.85,0.9" RadiusX="0.9" GradientOrigin="0.8,0.8" RadiusY="0.8" >
        <GradientStop Color="#FFFFEA00" Offset="0.2"/>
        <GradientStop Color="#FFD1D261" Offset="0.8"/>
        <GradientStop Color="Black" Offset="1"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="PasswordBoxBgWrong" Color="#FF1A1A1A"/>
    <SolidColorBrush x:Key="PasswordBoxFgWrong" Color="#FF000000"/>
    <SolidColorBrush x:Key="PasswordBoxFgWrongFocus" Color="Red"/>
    <RadialGradientBrush x:Key="PasswordBoxBorderWrong" Center="0.85,0.9" RadiusX="0.9" GradientOrigin="0.8,0.8" RadiusY="0.8" >
        <GradientStop Color="#FFFF0004" Offset="0.2"/>
        <GradientStop Color="#FFE43D3D" Offset="0.8"/>
        <GradientStop Color="#FF020101" Offset="1"/>
    </RadialGradientBrush>

    <Style x:Key="PasswordBoxStyleAero" BasedOn="{x:Null}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgEnabled}"/>
        <Setter Property="Background" Value="{StaticResource PasswordBoxBgEnabled}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxBorderEnabled}"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Border" 
							CornerRadius="3"
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" 
							Background="{TemplateBinding Background}" 
							SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource PasswordBoxBgDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgDisabled}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxBorderDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderThickness" Value="2,2,2,2"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsKeyboardFocused}" Value="True"/>
                                <Condition Binding="{Binding ControlMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="2"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasswordBoxBgEnabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgEnabled}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxBorderEnabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgEnabledFocus}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsKeyboardFocused}" Value="False"/>
                                <Condition Binding="{Binding ControlMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="2"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasswordBoxBgEnabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgEnabled}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxBorderEnabled}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsKeyboardFocused}" Value="True"/>
                                <Condition Binding="{Binding ControlMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="3"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasswordBoxBgRequired}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgRequired}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxBorderRequired}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgRequiredFocus}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsKeyboardFocused}" Value="False"/>
                                <Condition Binding="{Binding ControlMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="3"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasswordBoxBgRequired}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgRequired}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxBorderRequired}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsKeyboardFocused}" Value="True"/>
                                <Condition Binding="{Binding ControlMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="4"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasswordBoxBgWrong}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgWrong}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxBorderWrong}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgWrongFocus}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsKeyboardFocused}" Value="False"/>
                                <Condition Binding="{Binding ControlMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="4"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasswordBoxBgWrong}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgWrong}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxBorderWrong}"/>
                        </MultiDataTrigger>

                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="{StaticResource PasswordBoxBgWrong}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgWrong}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PasswordBoxBorderWrong}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasswordBoxFgWrongFocus}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <AdornedElementPlaceholder/>
                        <!-- TODO <TextBlock Text="!"/>-->
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>

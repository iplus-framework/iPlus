<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:gip.core.layoutengine.avui.AvaloniaRibbon"
    xmlns:converters="clr-namespace:gip.core.layoutengine.avui.AvaloniaRibbon.Converters">

  <!-- Add Resources Here -->
  <ControlTheme x:Key="{x:Type local:RibbonSplitButton}" TargetType="local:RibbonSplitButton">
    <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="QuickAccessTemplate">
      <ControlTemplate>
        <RibbonSplitButton
            Height="34"
            KeyTip.KeyTipKeys="{Binding KeyTip.Tip}"
            Classes="quickAccessButton"
            Command="{Binding Command}"
            CommandParameter="{Binding CommandParameter}"
            DataContext="{Binding}"
            Focusable="False"
            Icon="{Binding QuickAccessIcon}"
            ItemsSource="{Binding ItemsSource}"
            MaxSize="Small"
            MinSize="Small"
            Size="Small"
            ToolTip.Tip="{Binding ToolTip.Tip}" />
      </ControlTemplate>
    </Setter>

    <!-- Quick access button style -->
    <Style Selector="^.quickAccessButton:not(:pointerover):not(:pressed)">
      <Setter Property="Background" Value="#01000000" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <!-- Large size style -->
    <Style Selector="^[Size=Large]">
      <Setter Property="Padding" Value="9,9,9,3" />
      <Setter Property="MaxWidth" Value="66" />
      <Setter Property="Template">
        <ControlTemplate>
          <Border Classes="RibbonButtonBackgroundBorder">
            <StackPanel Orientation="Vertical">
              <Button
                  Name="RibbonSplitButtonTopButton"
                  Padding="{TemplateBinding Padding}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  HorizontalContentAlignment="Center"
                  VerticalContentAlignment="Center"
                  BorderThickness="0"
                  Command="{TemplateBinding Command}"
                  CommandParameter="{TemplateBinding CommandParameter}">
                <ContentPresenter Content="{TemplateBinding LargeIcon}" />
              </Button>
              <ToggleButton
                  Name="toggle"
                  Padding="9,0,9,9"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  BorderThickness="0"
                  ClickMode="Press"
                  Focusable="False"
                  FontSize="12.5"
                  IsChecked="{TemplateBinding IsDropDownOpen, Mode=TwoWay}">
                <DockPanel>
                  <ContentPresenter Content="{TemplateBinding Content}" />
                  <Path
                      Margin="4,0,0,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 3 3 L 6 0"
                      DockPanel.Dock="Right"
                      Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}}"
                      StrokeThickness="1" />
                  <Popup
                      Name="PART_Popup"
                      MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                      IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                      PlacementTarget="{TemplateBinding}"
                      VerticalOffset="-1">
                    <Border
                        Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
                        Background="{DynamicResource MenuFlyoutPresenterBackground}"
                        BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                        BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                        CornerRadius="{DynamicResource OverlayCornerRadius}"
                        TextBlock.FontSize="{DynamicResource ContentControlFontSize}">
                      <VisualLayerManager>
                        <ScrollViewer Classes="menuscroller">
                          <ItemsPresenter
                              Name="PART_ItemsPresenter"
                              Margin="{DynamicResource MenuFlyoutScrollerMargin}"
                              ItemsPanel="{TemplateBinding ItemsPanel}" />
                        </ScrollViewer>
                      </VisualLayerManager>
                    </Border>
                  </Popup>
                </DockPanel>
              </ToggleButton>
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>

    <!-- Medium size style -->
    <Style Selector="^[Size=Medium]">
      <Setter Property="Template">
        <ControlTemplate>
          <Border Classes="RibbonButtonBackgroundBorder">
            <DockPanel>
              <ToggleButton
                  Name="toggle"
                  Padding="{TemplateBinding Padding}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  BorderThickness="0"
                  ClickMode="Press"
                  DockPanel.Dock="Right"
                  Focusable="False"
                  FontSize="12.5"
                  IsChecked="{TemplateBinding IsDropDownOpen, Mode=TwoWay}">
                <Grid>
                  <Path
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 3 3 L 6 0"
                      Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}}"
                      StrokeThickness="1" />
                  <Popup
                      Name="PART_Popup"
                      MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                      IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                      PlacementTarget="{TemplateBinding}"
                      VerticalOffset="-1">
                    <Border
                        Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
                        Background="{DynamicResource MenuFlyoutPresenterBackground}"
                        BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                        BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                        CornerRadius="{DynamicResource OverlayCornerRadius}"
                        TextBlock.FontSize="{DynamicResource ContentControlFontSize}">
                      <VisualLayerManager>
                        <ScrollViewer Classes="menuscroller">
                          <ItemsPresenter
                              Name="PART_ItemsPresenter"
                              Margin="{DynamicResource MenuFlyoutScrollerMargin}"
                              ItemsPanel="{TemplateBinding ItemsPanel}" />
                        </ScrollViewer>
                      </VisualLayerManager>
                    </Border>
                  </Popup>
                </Grid>
              </ToggleButton>
              <Button
                  Name="RibbonSplitButtonTopButton"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  HorizontalContentAlignment="Center"
                  VerticalContentAlignment="Center"
                  BorderThickness="0"
                  Command="{TemplateBinding Command}"
                  CommandParameter="{TemplateBinding CommandParameter}">
                <StackPanel Orientation="Horizontal">
                  <ContentPresenter Content="{TemplateBinding Icon}" />
                  <ContentPresenter Margin="3,0,0,0" Content="{TemplateBinding Content}" />
                </StackPanel>
              </Button>
            </DockPanel>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>

    <!-- Small size style -->
    <Style Selector="^[Size=Small]">
      <Setter Property="Width" Value="42" />
      <Setter Property="Template">
        <ControlTemplate>
          <Border Classes="RibbonButtonBackgroundBorder">
            <DockPanel>
              <ToggleButton
                  Name="toggle"
                  Padding="{TemplateBinding Padding}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  BorderThickness="0"
                  ClickMode="Press"
                  DockPanel.Dock="Right"
                  Focusable="False"
                  FontSize="12.5"
                  IsChecked="{TemplateBinding IsDropDownOpen, Mode=TwoWay}">
                <Grid>
                  <Path
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 3 3 L 6 0"
                      Stroke="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}}"
                      StrokeThickness="1" />
                  <Popup
                      Name="PART_Popup"
                      MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                      IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                      PlacementTarget="{TemplateBinding}"
                      VerticalOffset="-1">
                    <Border
                        Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
                        Background="{DynamicResource MenuFlyoutPresenterBackground}"
                        BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                        BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                        CornerRadius="{DynamicResource OverlayCornerRadius}"
                        TextBlock.FontSize="{DynamicResource ContentControlFontSize}">
                      <VisualLayerManager>
                        <ScrollViewer Classes="menuscroller">
                          <ItemsPresenter
                              Name="PART_ItemsPresenter"
                              Margin="{DynamicResource MenuFlyoutScrollerMargin}"
                              ItemsPanel="{TemplateBinding ItemsPanel}" />
                        </ScrollViewer>
                      </VisualLayerManager>
                    </Border>
                  </Popup>
                </Grid>
              </ToggleButton>
              <Button
                  Name="RibbonSplitButtonTopButton"
                  Padding="5,5,5,6"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  HorizontalContentAlignment="Center"
                  VerticalContentAlignment="Center"
                  BorderThickness="0"
                  Command="{TemplateBinding Command}"
                  CommandParameter="{TemplateBinding CommandParameter}">
                <ContentPresenter Content="{TemplateBinding Icon}" />
              </Button>
            </DockPanel>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>

    <!-- Corner radius styles for small and medium buttons -->
    <Style Selector="^[Size=Small] /template/ Button#RibbonSplitButtonTopButton /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="CornerRadius" Value="2,0,0,2" />
    </Style>
    <Style Selector="^[Size=Medium] /template/ Button#RibbonSplitButtonTopButton /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="CornerRadius" Value="2,0,0,2" />
    </Style>
    <Style Selector="^[Size=Small] /template/ ToggleButton#toggle /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="CornerRadius" Value="0,2,2,0" />
    </Style>
    <Style Selector="^[Size=Medium] /template/ ToggleButton#toggle /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="CornerRadius" Value="0,2,2,0" />
    </Style>

    <!-- Corner radius styles for large buttons -->
    <Style Selector="^[Size=Large] /template/ Button#RibbonSplitButtonTopButton /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="CornerRadius" Value="3,2,0,0" />
    </Style>
    <Style Selector="^[Size=Large] /template/ ToggleButton#toggle /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="CornerRadius" Value="0,0,2,2" />
    </Style>

    <!-- RibbonButton image margin -->
    <Style Selector="^ local|RibbonButton /template/ Image">
      <Setter Property="Margin" Value="0" />
    </Style>

    <!-- Toggle button default state -->
    <Style Selector="^[IsDropDownOpen=False] /template/ ToggleButton#toggle:not(:pointerover):not(:pressed):not(:checked)">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <!-- Background border styles -->
    <Style Selector="^ /template/ Border.RibbonButtonBackgroundBorder">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
      <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    </Style>
    <Style Selector="^:pointerover /template/ Border.RibbonButtonBackgroundBorder">
      <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundPointerOver}" />
    </Style>
    <Style Selector="^[IsDropDownOpen=True] /template/ Border.RibbonButtonBackgroundBorder">
      <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundPointerOver}" />
    </Style>
    <Style Selector="^:disabled /template/ Border.RibbonButtonBackgroundBorder">
      <Setter Property="Opacity" Value="{DynamicResource ThemeDisabledOpacity}" />
    </Style>

    <!-- Top button styles -->
    <Style Selector="^ /template/ Button#RibbonSplitButtonTopButton:not(:pointerover):not(:pressed)">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
  </ControlTheme>
</ResourceDictionary>
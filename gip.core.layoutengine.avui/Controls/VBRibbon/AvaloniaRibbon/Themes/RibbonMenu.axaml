<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:gip.core.layoutengine.avui.AvaloniaRibbon"
    xmlns:converters="clr-namespace:gip.core.layoutengine.avui.AvaloniaRibbon.Converters">

  <!-- Add Resources Here -->
  <ControlTheme x:Key="{x:Type local:RibbonMenu}" TargetType="local:RibbonMenu">
    <Setter Property="Background" Value="{DynamicResource ThemeControlMidBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderLowBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Content" Value="{DynamicResource AvaloniaRibbon.File}" />
    <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}" />
    <Setter Property="Template">
      <ControlTemplate>
        <Panel>
          <ToggleButton
              x:Name="ContentButton"
              Padding="{TemplateBinding Padding}"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              HorizontalContentAlignment="Center"
              VerticalContentAlignment="Center"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Content="{TemplateBinding Content}"
              FontSize="12.5"
              Foreground="{TemplateBinding Foreground}"
              IsChecked="{Binding IsMenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
          <Popup
              x:Name="MenuPopup"
              Width="{Binding $parent[local:Ribbon].Bounds.Width}"
              IsLightDismissEnabled="True"
              IsOpen="{Binding IsMenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
              PlacementTarget="{Binding #ContentButton}">
            <Border
                x:Name="MenuRootBorder"
                Background="{DynamicResource MenuFlyoutPresenterBackground}"
                BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                CornerRadius="{DynamicResource OverlayCornerRadius}"
                TextBlock.Foreground="{DynamicResource ThemeForegroundBrush}">
              <DockPanel LastChildFill="True">
                <Border
                    Background="{DynamicResource SystemControlForegroundChromeMediumBrush}"
                    BoxShadow="4 0 10 #40000000"
                    CornerRadius="4,0,0,4">
                  <DockPanel MinWidth="200">
                    <ToggleButton
                        x:Name="BackButton"
                        HorizontalAlignment="Left"
                        Width="{Binding #ContentButton.Bounds.Width}"
                        Height="{Binding #ContentButton.Bounds.Height}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClickMode="Press"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding !IsMenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                      <Panel Width="24" Height="24">
                        <Ellipse Stroke="{Binding $parent[local:Ribbon].Foreground}"
                                 StrokeThickness="1" />
                        <Panel Width="14" Height="10">
                          <Rectangle
                              Height="1"
                              VerticalAlignment="Center"
                              Fill="{Binding $parent[local:Ribbon].Foreground}" />
                          <Path
                              HorizontalAlignment="Left"
                              Data="M 5 0 L 0 5 L 5 10"
                              Stroke="{Binding $parent[local:Ribbon].Foreground}"
                              StrokeThickness="1" />
                        </Panel>
                      </Panel>
                    </ToggleButton>
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!--  Top Docked  -->
                        <RowDefinition Height="*" />
                        <!--  Content Area  -->
                        <RowDefinition Height="Auto" />
                        <!--  Bottom Docked  -->
                      </Grid.RowDefinitions>

                      <!--  Top Docked Grouped Items  -->
                      <ItemsControl Grid.Row="0"
                                    ItemsSource="{TemplateBinding TopDockedGroupedItems}">
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <ItemsControl ItemsSource="{Binding}" />
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>

                      <!--  Bottom Docked Grouped Items  -->
                      <ItemsControl Grid.Row="2"
                                    ItemsSource="{TemplateBinding BottomDockedGroupedItems}">
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <ItemsControl ItemsSource="{Binding}" />
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                    </Grid>
                  </DockPanel>
                </Border>
                <ContentPresenter Content="{TemplateBinding SelectedItemContent}" />
              </DockPanel>
            </Border>
          </Popup>
        </Panel>
      </ControlTemplate>
    </Setter>

    <!-- Ribbon orientation specific styles -->
    <Style Selector="local|Ribbon[Orientation=Horizontal] > ^">
      <Setter Property="Padding" Value="16,4" />
    </Style>
    <Style Selector="local|Ribbon[Orientation=Vertical] > ^">
      <Setter Property="Padding" Value="4" />
    </Style>

    <!-- ContentButton styles -->
    <Style Selector="local|Ribbon > ^ /template/ ToggleButton#ContentButton:not(:pointerover):not(:pressed):not(:checked)">
      <Setter Property="Foreground" Value="{Binding $parent[local:Ribbon].Foreground}" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <!-- BackButton styles -->
    <Style Selector="local|Ribbon > ^ /template/ ToggleButton#BackButton:not(:pointerover):not(:pressed):not(:checked)">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
  </ControlTheme>

</ResourceDictionary>
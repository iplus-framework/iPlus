<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:gip.core.layoutengine.avui.AvaloniaRibbon.Converters"
    xmlns:local="clr-namespace:gip.core.layoutengine.avui.AvaloniaRibbon"
    xmlns:sys="using:System">

  <ControlTheme x:Key="{x:Type local:Ribbon}" TargetType="local:Ribbon">
    <Setter Property="Focusable" Value="True" />
    <Setter Property="HeaderBackground" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
    <Setter Property="HeaderForeground" Value="{DynamicResource ButtonForeground}" />
    <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Margin" Value="0,0,0,-8" />
    <Setter Property="ItemsPanel">
      <ItemsPanelTemplate>
        <StackPanel Orientation="Horizontal" />
      </ItemsPanelTemplate>
    </Setter>
    <Setter Property="Template">
      <ControlTemplate>
        <Panel Margin="0,0,0,8">
          <DockPanel>
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BoxShadow="0 4 10 #40000000" />
          </DockPanel>
          <DockPanel Background="Transparent">
            <!--  Margin="0,34,0,0"  -->
            <DockPanel.Resources>
              <PathGeometry x:Key="TabHeadersClipBorderClip">
                <PathFigure IsClosed="True" StartPoint="0,0">
                  <LineSegment
                      Point="{Binding #TabHeadersClipBorder.Bounds, Converter={StaticResource BoundsPointToAdjustedPointConverter}, ConverterParameter='-67,0,TR'}" />
                  <LineSegment
                      Point="{Binding #TabHeadersClipBorder.Bounds, Converter={StaticResource BoundsPointToAdjustedPointConverter}, ConverterParameter='-67,34,TR'}" />
                  <LineSegment
                      Point="{Binding #TabHeadersClipBorder.Bounds, Converter={StaticResource BoundsPointToAdjustedPointConverter}, ConverterParameter='0,34,TR'}" />
                  <LineSegment
                      Point="{Binding #TabHeadersClipBorder.Bounds, Converter={StaticResource BoundsPointToAdjustedPointConverter}, ConverterParameter='0,0,BR'}" />
                  <LineSegment
                      Point="{Binding #TabHeadersClipBorder.Bounds, Converter={StaticResource BoundsPointToAdjustedPointConverter}, ConverterParameter='0,0,BL'}" />
                </PathFigure>
              </PathGeometry>
            </DockPanel.Resources>
            <Panel DockPanel.Dock="Top">
              <DockPanel x:Name="HeaderDockPanel" IsVisible="{TemplateBinding IsMenuVisible}">
                <ContentPresenter
                    x:Name="PART_MenuPresenter"
                    Content="{TemplateBinding Menu}"
                    DockPanel.Dock="Left" />
                <ToggleButton
                    Name="ExpandCollapseToggleButton"
                    VerticalAlignment="Stretch"
                    Classes="RibbonToggleButton"
                    DockPanel.Dock="Right"
                    Focusable="False"
                    IsChecked="{Binding IsCollapsed, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                    ToolTip.Tip="{DynamicResource AvaloniaRibbon.MinimizeRibbon}">
                  <Path
                      Width="8"
                      Height="4"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Classes="RibbonExpandCollapsePath"
                      Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                      StrokeThickness="1" />
                </ToggleButton>
                <ContentPresenter
                    Content="{TemplateBinding HelpPaneContent}"
                    DockPanel.Dock="Right"
                    Foreground="{TemplateBinding Foreground}"
                    ToolTip.Tip="{DynamicResource AvaloniaRibbon.GetHelp}" />
                <Border
                    x:Name="TabHeadersClipBorder"
                    Margin="0,-34,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ClipToBounds="True">
                  <ItemsPresenter
                      x:Name="PART_ItemsPresenter"
                      Margin="0,34,0,0"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch">
                    <ItemsPresenter.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel
                            x:Name="PART_TabsPanel"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Orientation="Horizontal" />
                      </ItemsPanelTemplate>
                    </ItemsPresenter.ItemsPanel>
                  </ItemsPresenter>
                </Border>
              </DockPanel>
            </Panel>
            <Panel DockPanel.Dock="Top">
              <Rectangle
                  x:Name="SeparatorRectangle"
                  Height="1"
                  HorizontalAlignment="Stretch"
                  Fill="{TemplateBinding BorderBrush}"
                  IsVisible="{Binding IsCollapsed, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" />
              <Popup
                  x:Name="PART_CollapsedContentPopup"
                  Width="{Binding Path=Bounds.Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                  Height="96"
                  IsOpen="{Binding IsCollapsedPopupOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                  Placement="LeftEdgeAlignedBottom"
                  PlacementTarget="{Binding ElementName=SeparatorRectangle}"
                  VerticalOffset="-1">
                <ContentControl
                    x:Name="PART_PopupGroupsPresenterHolder"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0,1" />
              </Popup>
            </Panel>
            <Panel Margin="0,-2,0,0">
              <ContentPresenter
                  Name="PART_SelectedContentHost"
                  Content="{TemplateBinding SelectedContent}"
                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                  IsVisible="False" />
              <ContentControl Name="PART_GroupsPresenterHolder"
                              HorizontalAlignment="Stretch">
                <ItemsControl
                  Name="PART_SelectedGroupsHost"
                  BorderThickness="1" CornerRadius="6" Background="{StaticResource RibbonTrayBack}" BorderBrush="{StaticResource RibbonTrayBorder}"
                  Height="96"
                  MinWidth="100"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  ItemsSource="{TemplateBinding SelectedGroups}"
                  TextBlock.Foreground="{TemplateBinding Foreground}">
                  <ItemsControl.ContextMenu>
                    <ContextMenu x:Name="PART_ContentAreaContextMenu">
                      <ContextMenu.Styles>
                        <Style Selector="MenuItem">
                          <Setter Property="Template"
                                  Value="{DynamicResource CheckableMenuItemControlTemplate}" />
                        </Style>
                      </ContextMenu.Styles>
                      <MenuItem x:Name="PART_PinLastHoveredControlToQuickAccess"
                                Header="{DynamicResource AvaloniaRibbon.AddToQAT}" />
                      <MenuItem x:Name="PART_CollapseRibbon"
                                Header="{DynamicResource AvaloniaRibbon.MinimizeRibbon}" />
                    </ContextMenu>
                  </ItemsControl.ContextMenu>
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <local:RibbonGroupsStackPanel
                          x:Name="PART_ItemsPanel"
                          Width="{Binding $parent[ItemsControl].Bounds.Width}"
                          Margin="0"
                          HorizontalAlignment="Left"
                          Background="Transparent"
                          VerticalAlignment="Stretch"
                          Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </ContentControl>
            </Panel>
          </DockPanel>
        </Panel>
      </ControlTemplate>
    </Setter>

    <!-- Vertical Orientation -->
    <Style Selector="^[Orientation=Vertical]">
      <Setter Property="Margin" Value="0,0,-8,0" />
      <Setter Property="Template">
        <ControlTemplate>
          <Panel Margin="0,0,8,0">
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BoxShadow="4 0 10 #40000000" />
            <Grid ColumnDefinitions="30,*">
              <DockPanel Grid.Column="0">
                <ContentPresenter
                    x:Name="PART_MenuPresenter"
                    MinHeight="30"
                    Content="{TemplateBinding Menu}"
                    IsVisible="{TemplateBinding IsMenuVisible}"
                    DockPanel.Dock="Top" />
                <DockPanel DockPanel.Dock="Bottom" LastChildFill="True">
                  <ToggleButton
                      Name="ExpandCollapseToggleButton"
                      HorizontalAlignment="Stretch"
                      Classes="RibbonToggleButton"
                      DockPanel.Dock="Bottom"
                      Focusable="False"
                      IsChecked="{Binding IsCollapsed, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                      ToolTip.Tip="{DynamicResource AvaloniaRibbon.MinimizeRibbon}">
                    <Path
                        Width="4"
                        Height="8"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Classes="RibbonExpandCollapsePath"
                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                        StrokeThickness="1" />
                  </ToggleButton>
                  <ContentPresenter
                      Content="{TemplateBinding HelpPaneContent}"
                      ToolTip.Tip="{DynamicResource AvaloniaRibbon.GetHelp}" />
                </DockPanel>
                <LayoutTransformControl VerticalAlignment="Top">
                  <LayoutTransformControl.LayoutTransform>
                    <RotateTransform Angle="-90" />
                  </LayoutTransformControl.LayoutTransform>

                  <ItemsPresenter
                      Name="PART_ItemsPresenter"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch">
                    <ItemsPresenter.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel
                            x:Name="PART_TabsPanel"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Orientation="Horizontal" />
                      </ItemsPanelTemplate>
                    </ItemsPresenter.ItemsPanel>
                  </ItemsPresenter>
                </LayoutTransformControl>
                <Popup
                    x:Name="PART_CollapsedContentPopup"
                    Width="138"
                    Height="{Binding Path=Bounds.Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    IsOpen="{Binding IsCollapsedPopupOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                    Placement="Right">
                  <!--  PlacementTarget="{Binding ElementName=SeparatorRectangle}"  -->
                  <ContentControl
                      x:Name="PART_PopupGroupsPresenterHolder"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      HorizontalContentAlignment="Stretch"
                      VerticalContentAlignment="Stretch"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="1,0" />
                </Popup>
              </DockPanel>
              <Border
                  Grid.Column="1"
                  VerticalAlignment="Stretch"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="1,0">
                <Grid>
                  <ContentPresenter
                      Name="PART_SelectedContentHost"
                      Content="{TemplateBinding SelectedContent}"
                      ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                      IsVisible="False" />
                  <ContentControl Name="PART_GroupsPresenterHolder" VerticalAlignment="Stretch"
                                  Background="{DynamicResource SystemControlForegroundChromeMediumBrush}">
                    <ItemsControl
                        Name="PART_SelectedGroupsHost"
                        BorderThickness="1" CornerRadius="6" Background="{StaticResource RibbonTrayBack}" BorderBrush="{StaticResource RibbonTrayBorder}"
                        Width="138"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="Stretch"
                        ItemsSource="{TemplateBinding SelectedGroups}"
                        TextBlock.Foreground="{TemplateBinding Foreground}">
                      <ItemsControl.ContextMenu>
                        <ContextMenu x:Name="PART_ContentAreaContextMenu">
                          <ContextMenu.Styles>
                            <Style Selector="MenuItem">
                              <Setter Property="Template"
                                      Value="{DynamicResource CheckableMenuItemControlTemplate}" />
                            </Style>
                          </ContextMenu.Styles>
                          <MenuItem x:Name="PART_PinLastHoveredControlToQuickAccess"
                                    Header="{DynamicResource AvaloniaRibbon.AddToQAT}" />
                          <MenuItem x:Name="PART_CollapseRibbon"
                                    Header="{DynamicResource AvaloniaRibbon.MinimizeRibbon}" />
                        </ContextMenu>
                      </ItemsControl.ContextMenu>
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <local:RibbonGroupsStackPanel
                              x:Name="PART_ItemsPanel"
                              Height="{Binding $parent[ItemsControl].Bounds.Height}"
                              Margin="0"
                              HorizontalAlignment="Stretch"
                              Background="Transparent"
                              VerticalAlignment="Top"
                              Orientation="Vertical" />
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                    </ItemsControl>
                  </ContentControl>
                </Grid>
              </Border>
            </Grid>
          </Panel>
        </ControlTemplate>
      </Setter>
    </Style>

    <!-- Template styles for buttons -->
    <Style Selector="^ /template/ Button.RibbonHelpButton">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector="^ /template/ Button.RibbonHelpButton:pointerover">
      <Setter Property="Background" Value="{DynamicResource ThemeControlMidBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderLowBrush}" />
    </Style>

    <!-- Toggle button and help button common styles -->
    <Style Selector="^ /template/ ToggleButton.RibbonToggleButton, ^ /template/ Button.RibbonHelpButton">
      <Setter Property="Margin" Value="3" />
    </Style>

    <!-- Horizontal orientation button styles -->
    <Style Selector="^[Orientation=Horizontal] /template/ ToggleButton.RibbonToggleButton, ^[Orientation=Horizontal] /template/ Button.RibbonHelpButton">
      <Setter Property="Padding" Value="12,3" />
    </Style>

    <!-- Vertical orientation button styles -->
    <Style Selector="^[Orientation=Vertical] /template/ ToggleButton.RibbonToggleButton, ^[Orientation=Vertical] /template/ Button.RibbonHelpButton">
      <Setter Property="Padding" Value="3,12" />
    </Style>

    <!-- Toggle button default state -->
    <Style Selector="^ /template/ ToggleButton.RibbonToggleButton:not(:pointerover):not(:pressed), ^ /template/ Button.RibbonHelpButton:not(:pointerover):not(:pressed)">
      <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundAltHighBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlBackgroundChromeMediumBrush}" />
    </Style>

    <!-- Toggle button checked state -->
    <Style Selector="^ /template/ ToggleButton.RibbonToggleButton:checked">
      <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundAltHighBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlBackgroundChromeMediumBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForeground}" />
    </Style>

    <!-- Toggle button checked hover state -->
    <Style Selector="^ /template/ ToggleButton.RibbonToggleButton:checked:pointerover">
      <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
      <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPointerOver}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPointerOver}" />
    </Style>

    <!-- Toggle button checked pressed state -->
    <Style Selector="^ /template/ ToggleButton.RibbonToggleButton:checked:pressed">
      <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPressed}" />
      <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPressed}" />
      <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPressed}" />
    </Style>

    <!-- Expand/Collapse path data for different orientations and states -->
    <Style Selector="^[Orientation=Horizontal][IsCollapsed=False] /template/ ToggleButton.RibbonToggleButton Path.RibbonExpandCollapsePath">
      <Setter Property="Data" Value="M 0 5 L 5 0 L 10 5" />
    </Style>
    <Style Selector="^[Orientation=Horizontal][IsCollapsed=True] /template/ ToggleButton.RibbonToggleButton Path.RibbonExpandCollapsePath">
      <Setter Property="Data" Value="M 0 0 L 5 5 L 10 0" />
    </Style>
    <Style Selector="^[Orientation=Vertical][IsCollapsed=False] /template/ ToggleButton.RibbonToggleButton Path.RibbonExpandCollapsePath">
      <Setter Property="Data" Value="M 5 0 L 0 5 L 5 10" />
    </Style>
    <Style Selector="^[Orientation=Vertical][IsCollapsed=True] /template/ ToggleButton.RibbonToggleButton Path.RibbonExpandCollapsePath">
      <Setter Property="Data" Value="M 0 0 L 5 5 L 0 10" />
    </Style>

    <!-- Menu styles -->
    <Style Selector="^ /template/ Popup Menu.RibbonMenuMenu">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="ItemsPanel">
        <ItemsPanelTemplate>
          <StackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter>
    </Style>

    <!-- Menu item styles -->
    <Style Selector="^ /template/ Popup Menu.RibbonMenuMenu MenuItem">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Padding" Value="10" />
      <Setter Property="Template">
        <ControlTemplate>
          <Border
              Name="root"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
            <Grid ColumnDefinitions="20,5,*,20">
              <ContentPresenter
                  Name="icon"
                  Width="16"
                  Height="16"
                  Margin="3"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Content="{TemplateBinding Icon}" />
              <Path
                  Name="check"
                  Grid.Column="0"
                  Margin="3"
                  VerticalAlignment="Center"
                  Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                  Fill="{TemplateBinding Foreground}"
                  IsVisible="False" />
              <ContentPresenter
                  Name="PART_HeaderPresenter"
                  Grid.Column="2"
                  Margin="{TemplateBinding Padding}"
                  VerticalAlignment="Center"
                  Content="{TemplateBinding Header}">
                <ContentPresenter.DataTemplates>
                  <DataTemplate DataType="sys:String">
                    <AccessText Text="{Binding}" />
                  </DataTemplate>
                </ContentPresenter.DataTemplates>
              </ContentPresenter>
              <Path
                  Name="rightArrow"
                  Grid.Column="3"
                  Margin="10,0,0,0"
                  VerticalAlignment="Center"
                  Data="M0,0L4,3.5 0,7z"
                  Fill="{TemplateBinding Foreground}" />
              <Popup
                  Name="PART_Popup"
                  Grid.Column="0"
                  Width="200"
                  IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
                  Placement="Left">
                <Border>
                  <ScrollViewer>
                    <ItemsPresenter
                        Name="PART_ItemsPresenter"
                        Margin="4,2"
                        ItemsPanel="{TemplateBinding ItemsPanel}" />
                  </ScrollViewer>
                </Border>
              </Popup>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>

    <!-- Menu item interaction states -->
    <Style Selector="^ /template/ Popup Menu.RibbonMenuMenu MenuItem:pointerover">
      <Setter Property="Background" Value="{DynamicResource ThemeControlHighlightMidBrush}" />
    </Style>
    <Style Selector="^ /template/ Popup Menu.RibbonMenuMenu MenuItem:selected">
      <Setter Property="Background" Value="{DynamicResource ThemeAccentBrush4}" />
    </Style>
    <Style Selector="^ /template/ Popup Menu.RibbonMenuMenu MenuItem:selected:focus">
      <Setter Property="Background" Value="{DynamicResource ThemeAccentBrush3}" />
    </Style>
    <Style Selector="^ /template/ Popup Menu.RibbonMenuMenu MenuItem:selected:pointerover">
      <Setter Property="Background" Value="{DynamicResource ThemeAccentBrush3}" />
    </Style>
    <Style Selector="^ /template/ Popup Menu.RibbonMenuMenu MenuItem:selected:focus:pointerover">
      <Setter Property="Background" Value="{DynamicResource ThemeAccentBrush2}" />
    </Style>

    <!-- Menu item submenu behavior -->
    <Style Selector="^ /template/ Popup Menu.RibbonMenuMenu MenuItem[IsPointerOver=True]">
      <Setter Property="IsSubMenuOpen" Value="True" />
    </Style>
    <Style Selector="^ /template/ Popup Menu.RibbonMenuMenu MenuItem[IsPointerOver=False]">
      <Setter Property="IsSubMenuOpen" Value="False" />
    </Style>

    <!-- Places list styles -->
    <Style Selector="^ /template/ Popup ListBox.RibbonMenuPlacesList">
      <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style Selector="^ /template/ Popup ListBox.RibbonMenuPlacesList ListBoxItem">
      <Setter Property="Padding" Value="10" />
    </Style>
  </ControlTheme>

</ResourceDictionary>
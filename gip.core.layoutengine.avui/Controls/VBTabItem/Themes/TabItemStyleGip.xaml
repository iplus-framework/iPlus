<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:local="clr-namespace:gip.core.layoutengine.avui">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/gip.core.layoutengine.avui;Component/Controls/Shared.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <RadialGradientBrush x:Key="CloseButtonBrushStyleGip">
        <GradientStop Color="#ADADAD" Offset="0"/>
        <GradientStop Color="{StaticResource {ComponentResourceKey ResourceId=ColorAppLight, TypeInTargetAssembly={x:Type local:VBCustomControl}}}" Offset="1"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="CloseButtonBorderBrushGip" Color="#2D2D2D"/>
    <SolidColorBrush x:Key="CloseButtonFillBrushGip" Color="#9D9D9D"/>

    <RadialGradientBrush x:Key="CloseButtonBrushHotStyleGip">
        <GradientStop Color="{StaticResource {ComponentResourceKey ResourceId=ColorAppLight, TypeInTargetAssembly={x:Type local:VBCustomControl}}}" Offset="0"/>
        <GradientStop Color="#626262" Offset="1"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="CloseButtonBorderBrushHotGip" Color="Red"/>
    <SolidColorBrush x:Key="CloseButtonFillBrushHotGip" Color="#FF770000"/>


    <Style TargetType="{x:Type Button}" x:Key="CloseButtonStyleGip">
        <Setter Property="Background" Value="Yellow"></Setter>
        <Setter Property="BorderBrush" Value="Blue"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Canvas Height="16" Width="16">
                        <Rectangle x:Name="Kreis" Height="16" Width="16" RadiusX="4" RadiusY="4" Fill="{StaticResource CloseButtonBrushStyleGip}"/>
                        <!--<TextBlock Canvas.Left="4" Canvas.Top="-1" x:Name="CloseX" Foreground="{StaticResource {ComponentResourceKey ResourceId=CtrlTxtDisabled, TypeInTargetAssembly={x:Type local:VBCustomControl}}}">X</TextBlock>-->
                        <!--<Line x:Name="CloseX1" Canvas.Left="2" Stretch="Fill" Canvas.Top="7" StrokeThickness="1" Stroke="{StaticResource CloseButtonBorderBrushGip}" X1="0" Y1="0" X2="3" Y2="3" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
                        <Line x:Name="CloseX2" Canvas.Left="5" Stretch="Fill" Canvas.Top="4" StrokeThickness="1" Stroke="{StaticResource CloseButtonBorderBrushGip}" X1="7" Y1="0" X2="0" Y2="6" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>-->
                        <Path x:Name="CheckPath"
											      Width="10" 
												  Height="8" 
												  Canvas.Left="3" 
												  Canvas.Top="4" 
												  Stretch="Fill" 
												  StrokeStartLineCap="Round" 
												  StrokeEndLineCap="Round" 
												  StrokeLineJoin="Round" 
												  Stroke="{StaticResource CloseButtonBorderBrushGip}" 
												  Fill="{StaticResource CloseButtonFillBrushGip}" 
												  Data="F1 M 0,9L 4.5,16L 16,2L 4.5,12L 0,9.0 Z "/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Kreis" Property="Fill" Value="{StaticResource CloseButtonBrushHotStyleGip}" />
                            <Setter TargetName="CheckPath" Property="Stroke" Value="{StaticResource CloseButtonBorderBrushHotGip}"/>
                            <Setter TargetName="CheckPath" Property="Fill" Value="{StaticResource CloseButtonFillBrushHotGip}"/>
                            <!--<Setter TargetName="CloseX1" Property="Stroke" Value="{StaticResource CloseButtonBorderBrushHotGip}"/>
                            <Setter TargetName="CloseX2" Property="Stroke" Value="{StaticResource CloseButtonBorderBrushHotGip}"/>
                            <Setter TargetName="CloseX1" Property="StrokeThickness" Value="2"/>
                            <Setter TargetName="CloseX2" Property="StrokeThickness" Value="2"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="RibbonSwitchButtonStyleGip">
        <Setter Property="Background" Value="Yellow"></Setter>
        <Setter Property="BorderBrush" Value="Blue"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Canvas Height="16" Width="16">
                        <Rectangle x:Name="Kreis" Height="16" Width="16" RadiusX="4" RadiusY="4" Fill="{StaticResource CloseButtonBrushStyleGip}"/>

                        <Path x:Name="TrianglePath" Width="6" Height="4" Canvas.Left="5" Canvas.Top="7" Stretch="Fill" StrokeLineJoin="Round" Stroke="{StaticResource CloseButtonBorderBrushGip}" Fill="{StaticResource CloseButtonFillBrushGip}" Data="F1 M 8,10.5L 10.5,7.5L 5.5,7.5L 8,10.5 Z "/>
                        <Path x:Name="IconPath" Width="6" Height="1" Canvas.Left="5" Canvas.Top="4.5" Stretch="Fill" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" Stroke="{StaticResource CloseButtonBorderBrushGip}" Data="F1 M 5.5,5L 10.5,5"/>

                        <!--<Path x:Name="IconPath" Width="11" Height="9" Canvas.Left="2.5" Canvas.Top="3.5" Stretch="Fill" StrokeLineJoin="Round" Stroke="{StaticResource CloseButtonBorderBrushGip}" Fill="{StaticResource CloseButtonFillBrushGip}" Data="F1 M 4,4L 12,4C 12.5523,4 13,4.44772 13,5L 13,11C 13,11.5523 12.5523,12 12,12L 4,12C 3.44771,12 3,11.5523 3,11L 3,5C 3,4.44772 3.44771,4 4,4 Z "/>
                        <Path x:Name="TrianglePath" Width="6" Height="4" Canvas.Left="5" Canvas.Top="6" Stretch="Fill" StrokeLineJoin="Round" Stroke="{StaticResource CloseButtonBorderBrushGip}" Fill="{StaticResource CloseButtonFillBrushGip}" Data="F1 M 8,9.5L 10.5,6.5L 5.5,6.5L 8,9.5 Z "/>-->

                        <!--<Path x:Name="IconPath" Width="9" Height="6" Canvas.Left="3.5" Canvas.Top="9" Stretch="Fill" StrokeLineJoin="Round" Stroke="{StaticResource CloseButtonBorderBrushGip}" Fill="{StaticResource CloseButtonFillBrushGip}" Data="F1 M 8,14.5L 12,9.5L 4,9.5L 8,14.5 Z "/>
                        <Path x:Name="TrianglePath" Width="5" Height="4" Canvas.Left="3.5" Canvas.Top="4.00001" Stretch="Fill" StrokeLineJoin="Round" Stroke="{StaticResource CloseButtonBorderBrushGip}" Fill="{StaticResource CloseButtonFillBrushGip}" Data="F1 M 5,4.50001L 6.99999,4.50001C 7.55228,4.50001 7.99999,4.94772 7.99999,5.50001L 7.99999,6.50001C 7.99999,7.05229 7.55228,7.50001 6.99999,7.50001L 5,7.50001C 4.44771,7.50001 4,7.05229 4,6.50001L 4,5.50001C 4,4.94772 4.44771,4.50001 5,4.50001 Z "/>
                        <TextBlock x:Name="DotText" TextAlignment="Left" FontFamily="Times New Roman" FontSize="8" VerticalAlignment="Top" HorizontalAlignment="Left">
		                    <TextBlock.RenderTransform>
			                    <TransformGroup>
				                    <MatrixTransform Matrix="1.33333,0,0,1.33333,8,-1.6"/>
			                    </TransformGroup>
		                    </TextBlock.RenderTransform>
		                    <Run Text=".." Foreground="{StaticResource CloseButtonBorderBrushGip}"/>
                        </TextBlock>-->
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Kreis" Property="Fill" Value="{StaticResource CloseButtonBrushHotStyleGip}" />
                            <Setter TargetName="IconPath" Property="Stroke" Value="{StaticResource CloseButtonBorderBrushHotGip}"/>
                            <!--<Setter TargetName="IconPath" Property="Fill" Value="{StaticResource CloseButtonFillBrushHotGip}"/>-->
                            <Setter TargetName="TrianglePath" Property="Stroke" Value="{StaticResource CloseButtonBorderBrushHotGip}"/>
                            <Setter TargetName="TrianglePath" Property="Fill" Value="{StaticResource CloseButtonFillBrushHotGip}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemFocusVisualGip">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="TabItemNormalBackgroundGip" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#535353" Offset="0"/>
        <GradientStop Color="#4B4B4B" Offset="0.5"/>
        <GradientStop Color="#3D3D3D" Offset="0.5"/>
        <GradientStop Color="#2D2D2D" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemNormalBorderBrushGip" Color="#535353"/>

    <LinearGradientBrush x:Key="TabItemSelectedBackgroundGip" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#B2B2B2" Offset="0.15"/>
        <GradientStop Color="#A2A2A2" Offset=".5"/>
        <GradientStop Color="#929292" Offset=".5"/>
        <GradientStop Color="{StaticResource {ComponentResourceKey ResourceId=ColorAppLight, TypeInTargetAssembly={x:Type local:VBCustomControl}}}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItemDisabledBackgroundGip" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#535353" Offset="0"/>
        <GradientStop Color="#4B4B4B" Offset="0.5"/>
        <GradientStop Color="#3D3D3D" Offset="0.5"/>
        <GradientStop Color="#2D2D2D" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrushGip" Color="#535353"/>

    <LinearGradientBrush x:Key="TabItemHotBackgroundGip" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#434343" Offset="0.15"/>
        <GradientStop Color="#3B3B3B" Offset=".5"/>
        <GradientStop Color="#2D2D2D" Offset=".5"/>
        <GradientStop Color="#1D1D1D" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemHotBorderBrushGip" Color="#434343"/>
    <SolidColorBrush x:Key="TabItemFgSelectedBrushGip" Color="Black"/>
    <SolidColorBrush x:Key="TabItemFgNormalBrushGip" Color="#B2B2B2"/> 

    <Style x:Key="TabItemStyleGip" TargetType="{x:Type local:VBTabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisualGip}"/>
        <Setter Property="Foreground" Value="{StaticResource TabItemFgNormalBrushGip}"/>
        <Setter Property="Padding" Value="6,1,6,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItemNormalBorderBrushGip}"/>
        <Setter Property="Background" Value="{StaticResource TabItemNormalBackgroundGip}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VBTabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="PART_TabItemBorder" CornerRadius="5,5,0,0" 
                                Background="{StaticResource TabItemNormalBackgroundGip}" 
                                BorderBrush="{StaticResource TabItemNormalBorderBrushGip}" 
                                BorderThickness="1,1,0,0"
                                Margin="2,2,-2,0"
                                Padding="{TemplateBinding Padding}">
                            <Grid x:Name="gridParent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5*" MinWidth="50" MaxWidth="300"></ColumnDefinition>
                                    <ColumnDefinition Width="1*" MaxWidth="20"></ColumnDefinition>
                                    <ColumnDefinition Width="1*" MaxWidth="20"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1"></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Line x:Name="PART_DragableGrip" X2="{Binding ActualWidth, ElementName=gridParent}" 
                                      Stroke="#FF7C7C7C" StrokeDashCap="Square" 
                                      StrokeThickness="1" Grid.ColumnSpan="3" StrokeDashArray="1 4" 
                                      ClipToBounds="True" Margin="5,0,5,0" MinWidth="50" MaxWidth="150" MaxHeight="1"
                                      Visibility="Collapsed">
                                </Line>
                                <ContentPresenter Grid.Row="1" Grid.Column="0" x:Name="Content" 
                                                  ContentSource="Header" 
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
                                    <!--<ContentPresenter.Style>
                                        <Style TargetType="{x:Type ContentPresenter}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={StaticResource TouchScreenMode}}" Value="True">
                                                    <Setter Property="MinHeight" Value="40" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentPresenter.Style>-->
                                </ContentPresenter>
                                <Button Grid.Row="1" Grid.Column="2" x:Name="PART_CloseButton" Style="{StaticResource CloseButtonStyleGip}" 
                                        Margin="4,0,0,0" MinWidth="5" MinHeight="5" Height="16" Width="16" 
                                        VerticalAlignment="Center" HorizontalAlignment="Left" 
                                        Visibility="Collapsed"
                                        Cursor="Arrow">
                                </Button>
                                <Button Grid.Row="1" Grid.Column="1" x:Name="PART_RibbonSwitchButton" Style="{StaticResource RibbonSwitchButtonStyleGip}" 
                                    Margin="4,0,0,0" MinWidth="5" MinHeight="5" Height="16" Width="16" 
                                    VerticalAlignment="Center" HorizontalAlignment="Left" 
                                    Visibility="Collapsed"
                                    Cursor="Arrow">
                                    <!--<EventSetter Event="Button.Click" Handler="closeButton_Click"/>-->
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowRibbonBar" Value="false"/>
                                <Condition Property="TabItemCount" Value="1"/>
                                <Condition Property="ShowCaption" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_TabItemBorder" Value="Collapsed"/>
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="PART_TabItemBorder" Value="{StaticResource TabItemHotBackgroundGip}"/>
                            <Setter Property="BorderBrush" TargetName="PART_TabItemBorder" Value="{StaticResource TabItemHotBorderBrushGip}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="PART_TabItemBorder" Value="{StaticResource TabItemSelectedBackgroundGip}"/>
                            <Setter Property="BorderBrush" TargetName="PART_TabItemBorder" Value="{StaticResource {ComponentResourceKey ResourceId=TabItemSelectedBorderBrushGip, TypeInTargetAssembly={x:Type local:VBCustomControl}}}"/>
                            <Setter Property="BorderThickness" TargetName="PART_TabItemBorder" Value="1,1,0,0"/>
                            <Setter Property="Foreground" Value="{StaticResource TabItemFgSelectedBrushGip}"/>
                        </Trigger>
                        <Trigger Property="IsDragable" Value="true">
                            <Setter Property="Visibility" TargetName="PART_DragableGrip" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WithVisibleCloseButton" Value="true"/>
                                <Condition Property="IsSelected" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WithVisibleCloseButton" Value="true"/>
                                <!--<Condition Property="IsSelected" Value="false"/>-->
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_CloseButton" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowRibbonBar" Value="true"/>
                                <Condition Property="IsSelected" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_RibbonSwitchButton" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowRibbonBar" Value="true"/>
                                <!--<Condition Property="IsSelected" Value="false"/>-->
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_RibbonSwitchButton" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="PART_TabItemBorder" Value="{StaticResource TabItemHotBorderBrushGip}"/>
                            <Setter Property="Foreground" Value="{StaticResource {ComponentResourceKey ResourceId=CtrlTxtEnabled, TypeInTargetAssembly={x:Type local:VBCustomControl}}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDragable" Value="true"/>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Cursor" TargetName="PART_TabItemBorder" Value="Hand"/>
                        </MultiTrigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="PART_TabItemBorder" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="PART_TabItemBorder" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="PART_TabItemBorder" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_TabItemBorder" Value="{StaticResource TabItemDisabledBackgroundGip}"/>
                            <Setter Property="BorderBrush" TargetName="PART_TabItemBorder" Value="{StaticResource TabItemDisabledBorderBrushGip}"/>
                            <Setter Property="Foreground" Value="{StaticResource {ComponentResourceKey ResourceId=CtrlTxtDisabled, TypeInTargetAssembly={x:Type local:VBCustomControl}}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

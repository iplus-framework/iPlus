<ResourceDictionary
   xmlns="https://github.com/avaloniaui"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:local="clr-namespace:gip.core.layoutengine.avui"
   x:ClassModifier="internal">

	<ControlTheme x:Key="{x:Type local:VBListBox}" TargetType="{x:Type local:VBListBox}">
		<Setter Property="Foreground" Value="{DynamicResource ListBoxFgEnabledGip}"/>
		<Setter Property="Background" Value="{DynamicResource ListBoxBgEnabledGip}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderEnabledGip}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="CornerRadius" Value="3"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True"/>
		<Setter Property="ScrollViewer.IsScrollInertiaEnabled" Value="True"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Grid x:Name="LayoutRoot" Margin="{TemplateBinding Margin}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="{TemplateBinding WidthCaption}" MaxWidth="{TemplateBinding WidthCaptionMax}"/>
						<ColumnDefinition Width="{TemplateBinding WidthContent}" MaxWidth="{TemplateBinding WidthContentMax}"/>
						<ColumnDefinition Width="{TemplateBinding WidthPadding}"/>
					</Grid.ColumnDefinitions>
					
					<local:VBTextBlock x:Name="PART_Caption" 
									   Margin="0,0,0,0" 
									   Grid.Column="0" 
									   VerticalAlignment="Center" 
									   Text="{TemplateBinding ACCaptionTrans}"/>
					
					<Border x:Name="Border" 
							Margin="5,0,0,0" 
							Grid.Column="1"
							CornerRadius="{TemplateBinding CornerRadius}"
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" 
							Background="{TemplateBinding Background}">
						<ScrollViewer x:Name="PART_ScrollViewer"
									  Margin="0" 
									  Focusable="false"
									VerticalSnapPointsType="{TemplateBinding (ScrollViewer.VerticalSnapPointsType)}"
									HorizontalSnapPointsType="{TemplateBinding (ScrollViewer.HorizontalSnapPointsType)}"
									HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
									VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
									IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
									IsScrollInertiaEnabled="{TemplateBinding (ScrollViewer.IsScrollInertiaEnabled)}"
									IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"
									AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
									BringIntoViewOnFocusChange="{TemplateBinding (ScrollViewer.BringIntoViewOnFocusChange)}">
							<ItemsPresenter x:Name="PART_ItemsPresenter"
											ItemsPanel="{TemplateBinding ItemsPanel}"
										  Margin="{TemplateBinding Padding}" />
						</ScrollViewer>
					</Border>
				</Grid>
			</ControlTemplate>
		</Setter>

		<!-- ShowCaption = False -->
		<Style Selector="^[ShowCaption=False]">
			<Setter Property="WidthCaption" Value="0"/>
			<Style Selector="^ /template/ Border#Border">
				<Setter Property="Margin" Value="0,0,0,0"/>
			</Style>
		</Style>

		<!-- Disabled State -->
		<Style Selector="^:disabled">
			<Setter Property="Background" Value="{DynamicResource ListBoxBgDisabledGip}"/>
			<Setter Property="Foreground" Value="{DynamicResource ListBoxFgDisabledGip}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderDisabledGip}"/>
		</Style>

		<!-- Enabled States -->
		<Style Selector="^[ControlMode=Enabled]:focus">
			<Setter Property="Background" Value="{DynamicResource ListBoxBgEnabledGip}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderEnabledGip}"/>
			<Setter Property="Foreground" Value="{DynamicResource ListBoxFgEnabledGipFocus}"/>
		</Style>
		<Style Selector="^[ControlMode=Enabled]">
			<Setter Property="Background" Value="{DynamicResource ListBoxBgEnabledGip}"/>
			<Setter Property="Foreground" Value="{DynamicResource ListBoxFgEnabledGip}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderEnabledGip}"/>
		</Style>

		<!-- EnabledRequired States -->
		<Style Selector="^[ControlMode=EnabledRequired]:focus">
			<Setter Property="Background" Value="{DynamicResource ListBoxBgRequiredGip}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderRequiredGip}"/>
			<Setter Property="Foreground" Value="{DynamicResource ListBoxFgRequiredGipFocus}"/>
		</Style>
		<Style Selector="^[ControlMode=EnabledRequired]">
			<Setter Property="Background" Value="{DynamicResource ListBoxBgRequiredGip}"/>
			<Setter Property="Foreground" Value="{DynamicResource ListBoxFgRequiredGip}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderRequiredGip}"/>
		</Style>

		<!-- EnabledWrong States -->
		<Style Selector="^[ControlMode=EnabledWrong]:focus">
			<Setter Property="Background" Value="{DynamicResource ListBoxBgWrongGip}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderWrongGip}"/>
			<Setter Property="Foreground" Value="{DynamicResource ListBoxFgWrongGipFocus}"/>
		</Style>
		<Style Selector="^[ControlMode=EnabledWrong]">
			<Setter Property="Background" Value="{DynamicResource ListBoxBgWrongGip}"/>
			<Setter Property="Foreground" Value="{DynamicResource ListBoxFgWrongGip}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderWrongGip}"/>
		</Style>

		<!-- Validation Error State -->
		<Style Selector="^:error">
			<Setter Property="Background" Value="{DynamicResource ListBoxBgWrongGip}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderWrongGip}"/>
			<Setter Property="Foreground" Value="{DynamicResource ListBoxFgWrongGipFocus}"/>
		</Style>
	</ControlTheme>

	<!--<ControlTheme x:Key="ListBoxStyleGip" TargetType="local:VBListBox" BasedOn="{StaticResource {x:Type local:VBListBox}}">
	</ControlTheme>-->

</ResourceDictionary>

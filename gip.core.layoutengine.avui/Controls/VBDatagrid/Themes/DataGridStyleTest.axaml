<ResourceDictionary
   xmlns="https://github.com/avaloniaui"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:collections="using:Avalonia.Collections"
   xmlns:local="clr-namespace:gip.core.layoutengine.avui">
  <ResourceDictionary.MergedDictionaries>
    <ResourceInclude Source="avares://gip.core.layoutengine.avui/Controls/VBDatagrid/Themes/LightThemeColors.axaml"/>
  </ResourceDictionary.MergedDictionaries>

  <!-- //// ROW //// -->
  <Style x:Key="RowStyle" TargetType="{x:Type controls:DataGridRow}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <!--<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:DataGridRow}">
          <Border x:Name="DGR_Border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
            <Border.Background>
              <SolidColorBrush Color="Transparent" />
            </Border.Background>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />

                <VisualState x:Name="Normal_AlternatingRow">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgAlternate}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="Normal_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="Unfocused_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="Normal_Editing">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgSelectedEdit}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="MouseOver_Editing">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgSelectedEdit}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="MouseOver_Unfocused_Editing">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgSelectedEdit}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="Unfocused_Editing">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgSelectedEdit}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgHover}" />
                    </ColorAnimationUsingKeyFrames>
                    <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.100"
                                                   Storyboard.TargetName="HoverRectangle"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   To="1"/>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="MouseOver_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="MouseOver_Unfocused_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowBgSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <SelectiveScrollingGrid>
              <SelectiveScrollingGrid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </SelectiveScrollingGrid.ColumnDefinitions>
              <SelectiveScrollingGrid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </SelectiveScrollingGrid.RowDefinitions>
              <DataGridCellsPresenter Grid.Column="1"
                      ItemsPanel="{TemplateBinding ItemsPanel}"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <DataGridDetailsPresenter Grid.Column="1"
                        Grid.Row="1"
                        Visibility="{TemplateBinding DetailsVisibility}"
                        SelectiveScrollingGrid.SelectiveScrollingOrientation=
                                        "{Binding AreRowDetailsFrozen, 
                                            ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                            Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
              <DataGridRowHeader Grid.RowSpan="2"
                          SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                          Visibility="{Binding HeadersVisibility, 
                                        ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
              <Rectangle x:Name="HoverRectangle"
                         Opacity="0"
                         IsHitTestVisible="False"
                         Fill="{StaticResource HoverShineBrush}" Grid.ColumnSpan="2" Grid.RowSpan="2" />
            </SelectiveScrollingGrid>
          </Border>
          <!--<ControlTemplate.Triggers>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="DataGrid.RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="DetailsVisibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="DetailsVisibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- ////// ROW-DETAILS-TEMPLATE ///// -->
  <DataTemplate  x:Key="RowDetailsContentTemplate">
    <TextBlock Text="{Binding }" VerticalAlignment="Center" Foreground="White" />
  </DataTemplate>


  <!-- ////// ROW-HEADER /////-->
  <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Height" Value="8" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeNS" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <local:DataGridRowHeaderCommand x:Key="deselectRowCommand" />

  <Style x:Key="RowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="MinHeight" Value="{StaticResource cellHeight}" />
    <Setter Property="MinWidth" Value="{StaticResource cellHeight}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0,0,1,0" />
    <Setter Property="BorderBrush" Value="#FFFFFF" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Command" Value="{StaticResource deselectRowCommand}" />
    <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Mode=Self}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Normal_CurrentRow" />
                <VisualState x:Name="Unfocused_EditingRow">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal_EditingRow">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="MouseOver_CurrentRow" />
                <VisualState x:Name="MouseOver_Unfocused_EditingRow">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver_EditingRow">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver_Unfocused_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver_CurrentRow_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused_CurrentRow_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal_CurrentRow_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal_Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleFillSelected}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RowHeaderTriangleStrokeSelected}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="BackgroundRectangle"
                       Fill="{StaticResource NormalBrush}"
                       Stretch="Fill"
                       Stroke="{StaticResource NormalBorderBrush}" StrokeThickness="1" />
            <Path x:Name="Triangle" Margin="6,0,6,0" Data="M 0,0 L 1.25,1 L 0,2 L 0,0" Stretch="Uniform" RenderTransformOrigin="0,1" Height="10" Width="10" StrokeThickness="1">
              <Path.Fill>
                <SolidColorBrush Color="{StaticResource RowHeaderTriangleFillNormal}" />
              </Path.Fill>
              <Path.Stroke>
                <SolidColorBrush Color="{StaticResource RowHeaderTriangleStrokeNormal}" />
              </Path.Stroke>
            </Path>
            <Rectangle x:Name="HoverRectangle"
                       Stretch="Fill"
                       Fill="{StaticResource HoverShineBrush}"
                       Opacity="0" />
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Rectangle x:Name="ShineRectangle"
                       Fill="{StaticResource ShineBrush}"
                       Stretch="Fill"
                       Stroke="{StaticResource NormalBorderBrush}"
                       StrokeThickness="1" />
            <Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top" />
            <Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- ///// CELL ////// -->
  <ControlTemplate x:Key="DataGridCellTemplateNormal" TargetType="{x:Type DataGridCell}">
    <Border x:Name="border"
            BorderBrush="Transparent"
            BorderThickness="1"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Unfocused" />
          <VisualState x:Name="Focused" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="CurrentStates">
          <VisualState x:Name="Regular" />
          <VisualState x:Name="Current">
            <Storyboard>
              <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CellBgSelected}" />
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CellBorderSelected}" />
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
    </Border>
  </ControlTemplate>

  <ControlTemplate x:Key="DataGridCellTemplateReadOnly" TargetType="{x:Type DataGridCell}">
    <Border x:Name="border"
            BorderBrush="{TemplateBinding Background}"
            BorderThickness="1"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Unfocused" />
          <VisualState x:Name="Focused" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="CurrentStates">
          <VisualState x:Name="Regular" />
          <VisualState x:Name="Current">
            <Storyboard>
              <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CellBorderSelectedReadOnly}" />
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.FontStyle="Italic">
      </ContentPresenter>
    </Border>
  </ControlTemplate>

  <local:ConverterDataType x:Key="DataTypeConverter"></local:ConverterDataType>
  <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
  <ControlTemplate x:Key="DataGridCellTemplateCombo" TargetType="{x:Type DataGridCell}">
    <Border x:Name="border"
            BorderBrush="Transparent"
            BorderThickness="1"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Unfocused" />
          <VisualState x:Name="Focused" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="CurrentStates">
          <VisualState x:Name="Regular" />
          <VisualState x:Name="Current">
            <Storyboard>
              <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CellBgSelected}" />
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CellBorderSelected}" />
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Grid.Column="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Path x:Name="Arrow" Width="7" Grid.Column="1" Data="{StaticResource DownArrowGeometry}" Fill="White" HorizontalAlignment="Right" VerticalAlignment="Center"/>
      </Grid>
    </Border>

    <ControlTemplate.Triggers >
      <Trigger Property="IsEditing" Value="True">
        <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
      </Trigger>
    </ControlTemplate.Triggers>

  </ControlTemplate>

  <Style x:Key="CellStyle" TargetType="{x:Type controls:DataGridCell}" >
    <Setter Property="MinHeight" Value="{StaticResource cellHeight}" />
    <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="2,0,0,0" />
    <Setter Property="Cursor" Value="Arrow" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template" Value="{StaticResource DataGridCellTemplateNormal}" />
    <!--<Setter Property="IsSelected" 
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:DataGridRow}, Path=IsSelected, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"/>-->
    <Style.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Column, Converter={StaticResource DataTypeConverter}}" Value="{x:Type local:VBDataGridComboBoxColumn}" />
          <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Column.IsReadOnly}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Template" Value="{StaticResource DataGridCellTemplateCombo}" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Column, Converter={StaticResource DataTypeConverter}}" Value="{x:Type local:VBDataGridDateTimeColumn}" />
          <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Column.IsReadOnly}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Template" Value="{StaticResource DataGridCellTemplateCombo}" />
      </MultiDataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Column.IsReadOnly}" Value="True">
        <Setter Property="Template" Value="{StaticResource DataGridCellTemplateReadOnly}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrushReadonly}" />
        <Setter Property="Background" Value="{StaticResource CellBgBrushReadOnly}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>


  <!--  ////// COLUMN-HEADER ////// -->
  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Width" Value="8"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Cursor" Value="SizeWE"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}"
          Background="{TemplateBinding Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type primitives:DataGridColumnHeader}">
    <Setter Property="Height" Value="{StaticResource cellHeight}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="4,4,5,4" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="SeparatorBrush" Value="#FFC9CACA" />
    <Setter Property="Height" Value="Auto" />

    <!--<Setter Property="Padding" Value="4,4,5,4" />-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type primitives:DataGridColumnHeader}">
          <Grid>
            <themes:DataGridHeaderBorder x:Name="HeaderBorder"
                                      SortDirection="{TemplateBinding SortDirection}"
                                      IsHovered="{TemplateBinding IsMouseOver}"
                                      IsPressed="{TemplateBinding IsPressed}"
                                      IsClickable="{TemplateBinding CanUserSort}"
                                      BorderBrush="{StaticResource DataGridLineBrush}"
                                      Background="{StaticResource NormalBrush}"
                                      BorderThickness="0,0,1,1"

                                      SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                      SeparatorBrush="{StaticResource DataGridLineBrush}">
              <Grid Background="Transparent" >
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Grid.RowSpan="2"
                   Fill="{StaticResource NormalBrush}"
                   Stretch="Fill"
                   Stroke="{StaticResource NormalBorderBrush}" StrokeThickness="1" />
                <Rectangle x:Name="HoverRectangle"
                   Grid.ColumnSpan="2" Grid.RowSpan="2" Stretch="Fill"
                   Fill="{StaticResource HoverShineBrush}"
                   Opacity="0" />
                <ContentPresenter Grid.Column="0"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                                  />
                <TextBlock x:Name="PART_TextBlockSum" Width="Auto" Grid.ColumnSpan="2" FontWeight="Medium"
                           Grid.Row="1" HorizontalAlignment="Right" Margin="0,0,4,0" VerticalAlignment="Center"
                           Visibility="{Binding SumVisibility, RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}"/>

                <Rectangle x:Name="ShineRectangle"
                   Fill="{StaticResource ShineBrush}"
                   Stretch="Fill"
                   Stroke="{StaticResource NormalBorderBrush}"
                   StrokeThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="2" />
                <Path HorizontalAlignment="Left" x:Name="SortArrow"
                      VerticalAlignment="Center" Width="8" Opacity="0"
                      RenderTransformOrigin=".5,.5" Grid.Column="1"
                      Fill="{StaticResource GlyphBrush}"
                      Stretch="Uniform"
                      Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                  <Path.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX=".9" ScaleY=".9" x:Name="SortIconTransform" />
                    </TransformGroup>
                  </Path.RenderTransform>
                </Path>
              </Grid>
            </themes:DataGridHeaderBorder>
            <Thumb x:Name="PART_LeftHeaderGripper"
       HorizontalAlignment="Left"
       Style="{StaticResource ColumnHeaderGripperStyle}"/>
            <Thumb x:Name="PART_RightHeaderGripper"
       HorizontalAlignment="Right"
       Style="{StaticResource ColumnHeaderGripperStyle}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
              <Setter TargetName="SortArrow" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00.20000"
                                     Storyboard.TargetName="HoverRectangle"
                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                     To="1"
                                                         />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00.20000"
                                     Storyboard.TargetName="HoverRectangle"
                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                     To="0"
                                                         />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Style and template for the button in the upper left corner of the DataGrid.-->
  <Style TargetType="{x:Type Button}" x:Key="DataGridSelectAllButtonStyle">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                   Value="#FFFF7A7A" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                   Value="#FFFF8A8A" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                             Storyboard.TargetName="Arrow">
                      <DiscreteObjectKeyFrame KeyTime="0"
                      Value="{x:Static Visibility.Collapsed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="Border"
         SnapsToDevicePixels="True">
              <Rectangle.Stroke>
                <LinearGradientBrush EndPoint="0.5,1"
                   StartPoint="0.5,0">
                  <GradientStop Color="#FF6A6A6A"
            Offset="0" />
                  <GradientStop Color="#FF2A2A2A"
            Offset="1" />
                </LinearGradientBrush>
              </Rectangle.Stroke>
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1"
                   StartPoint="0.5,0">
                  <GradientStop Color="#FF8A8A8A"
            Offset="0" />
                  <GradientStop Color="#FF5A5A5A"
            Offset="1" />
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Polygon x:Name="Arrow"
       HorizontalAlignment="Right"
       Margin="8,8,3,3"
       Opacity="0.15"
       Points="0,10 10,10 10,0"
       Stretch="Uniform"
       VerticalAlignment="Bottom"
                     Fill="{StaticResource GlyphBrush}">
            </Polygon>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate TargetType="{x:Type local:VBDataGrid}" x:Key="TemplateDataGridHorizontal">
    <Border x:Name="border"
                    SnapsToDevicePixels="True"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}">
      <!--<Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                        </Border.Background>-->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlLightColor}" />
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Normal" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <local:VBScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
        <ScrollViewer.Template>
          <ControlTemplate TargetType="{x:Type local:VBScrollViewer}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <Grid Background="{StaticResource NormalBrush}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Button Focusable="false" Command="{x:Static DataGrid.SelectAllCommand}"
                                Style="{StaticResource DataGridSelectAllButtonStyle}"
                                Background="{StaticResource NormalBrush}"
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}"
                                Width="{Binding CellsPanelHorizontalOffset,  RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}" />

                <Path  Data="M 3,3  L 18,3 M 2.5,3 L 14,10.2 M 14,9.8 L 2.5,17 M 3,17 L 18,17"
                        StrokeThickness="1.5"
                        Stroke="DarkRed"
                        Grid.Row="1"
                        Visibility="{Binding SumVisibility, RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}"
                        Margin="0,1.5,0,4"/>
              </Grid>



              <local:VBDataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                    Grid.Column="1"
                                    Visibility="{Binding HeadersVisibility, 
                                                  ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                  Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                    RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}" />

              <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                            Grid.ColumnSpan="2"
                            Grid.Row="1"
                            CanContentScroll="{TemplateBinding CanContentScroll}" />
              <local:VBScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Column="2"
                               Grid.Row="1"
                               Orientation="Vertical"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                               Value="{Binding VerticalOffset, Mode=OneWay, 
                                             RelativeSource={RelativeSource TemplatedParent}}"/>

              <Grid Grid.Column="1" Grid.Row="2">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <local:VBScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Column="1"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, 
                                                    RelativeSource={RelativeSource TemplatedParent}}"/>
              </Grid>
            </Grid>
          </ControlTemplate>
        </ScrollViewer.Template>
        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </local:VBScrollViewer>
    </Border>
  </ControlTemplate>

  <ControlTemplate TargetType="{x:Type local:VBDataGrid}" x:Key="TemplateDataGridVertical">
    <Border x:Name="border"
                    SnapsToDevicePixels="True"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}">
      <!--<Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                        </Border.Background>-->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlLightColor}" />
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Normal" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <local:VBScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
        <ScrollViewer.Template>
          <ControlTemplate TargetType="{x:Type local:VBScrollViewer}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <Button Focusable="false" Command="{x:Static DataGrid.SelectAllCommand}"
                                  Style="{StaticResource DataGridSelectAllButtonStyle}"
                                  Background="{StaticResource NormalBrush}"
                                  Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                                RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}"
                                  Width="{Binding CellsPanelHorizontalOffset,  RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}" />

              <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                    Grid.Row="1"
                                    Visibility="{Binding HeadersVisibility, 
                                                  ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                  Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                    RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}" />

              <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            CanContentScroll="{TemplateBinding CanContentScroll}" />
              <local:VBScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Row="2"
                               Grid.Column="1"
                               Orientation="Horizontal"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Maximum="{TemplateBinding ScrollableWidth}"
                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                               Value="{Binding HorizontalOffset, Mode=OneWay, 
                                             RelativeSource={RelativeSource TemplatedParent}}"/>

              <Grid Grid.Row="1" Grid.Column="2">
                <Grid.RowDefinitions>
                  <RowDefinition Height="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type local:VBDataGrid}}}" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <local:VBScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, 
                                                    RelativeSource={RelativeSource TemplatedParent}}"/>
              </Grid>
            </Grid>
          </ControlTemplate>
        </ScrollViewer.Template>
        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </local:VBScrollViewer>
    </Border>
  </ControlTemplate>

  <!-- /////// DATAGRID //////// -->
  <Style x:Key="DataGridStyle" TargetType="{x:Type local:VBDataGrid}">
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="GridLinesVisibility" Value="All" />
    <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridLineBrush}" />
    <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridLineBrush}" />
    <!--<Setter Property="AlternationCount" Value="1" />-->
    <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />
    <!--<Setter Property="SelectionUnit" Value="CellOrRowHeader" />-->
    <!--<Setter Property="SelectionMode" Value="Extended" />-->
    <!-- Single is Default-->
    <Setter Property="IsReadOnly" Value="False" />

    <Setter Property="AutoGenerateColumns" Value="False" />
    <Setter Property="CanUserAddRows" Value="False" />
    <!-- Ist default auf true, muss false sein, bis Bug in VBDataGrid.VBDataGrid_SelectionChanged() mit AutoLoad behoben wird -->
    <!-- Ist default auf true, muss false sein, bis Bug in VBDataGrid.VBDataGrid_SelectionChanged() mit AutoLoad behoben wird -->
    <Setter Property="CanUserDeleteRows" Value="False" />

    <!--<Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="True" />-->
    <!--<Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>-->
    <Setter Property="EnableRowVirtualization" Value="True" />
    <Setter Property="CellStyle" Value="{StaticResource CellStyle}" />
    <Setter Property="RowStyle" Value="{StaticResource RowStyle}" />
    <Setter Property="RowHeaderStyle" Value="{StaticResource RowHeaderStyle}" />
    <!--<Setter Property="RowHeaderTemplate" Value="{StaticResource RowHeaderContentTemplate}" />-->
    <!--<Setter Property="RowDetailsTemplate" Value="{StaticResource RowDetailsContentTemplate}" />-->
    <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <!--<Setter Property="HeadersVisibility" Value="All"/>-->
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template" Value="{StaticResource TemplateDataGridHorizontal}" />
    <Style.Triggers>
      <Trigger Property="IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
      <Trigger Property="VerticalRows" Value="true">
        <Setter Property="Template" Value="{StaticResource TemplateDataGridVertical}" />
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>

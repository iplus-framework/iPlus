<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:local="clr-namespace:gip.core.layoutengine.avui">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/gip.core.layoutengine.avui;Component/Controls/VBComboBox/Themes/ComboBoxStyleGip.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ComboButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="P_Border" 
                            Margin="1" 
                            CornerRadius="2" 
                            BorderThickness="1"
                            SnapsToDevicePixels="True"
                            Background="{StaticResource ButtonComboReadonlyBackground}"
                            BorderBrush="{StaticResource ButtonComboReadonlyBorder}" >
                        
                        <Grid SnapsToDevicePixels="True" >

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="16" />
                            </Grid.ColumnDefinitions>
                                                       
                            <Path Name="P_Arrow" 
                                  Grid.Column="1"
                                  Fill="White" 
                                  Margin="0,0,4.5,0" 
                                  HorizontalAlignment="Right" 
                                  VerticalAlignment="Center"
                                  Data="{StaticResource DownArrowGeometryGip}" />

                        </Grid>          
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="P_Arrow" Property="Fill" Value="#AFAFAF"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="P_Border" Property="Background" Value="{StaticResource ButtonComboNormalBackground}" />
                            <Setter TargetName="P_Border" Property="BorderBrush" Value="{StaticResource ButtonComboNormalBorder}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="P_Border" Property="Background" Value="{StaticResource ButtonComboNormalBackground}" />
                            <Setter TargetName="P_Border" Property="BorderBrush" Value="{StaticResource ButtonComboNormalBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VBMultiSelectComboBoxTemplate" TargetType="{x:Type local:VBMultiSelectComboBox}" >
        <Border CornerRadius="3"
			    Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
			    BorderThickness="{TemplateBinding BorderThickness}" 
			    SnapsToDevicePixels="true">

            <Grid SnapsToDevicePixels="True" >

                <Grid.ColumnDefinitions >
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Popup Name="P_Popup"
                       Grid.Column="0" Grid.ColumnSpan="2"
                       AllowsTransparency="True" 
                       Placement="Bottom" 
                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >

                    <Border BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{StaticResource PopupBackgroundGipBrush}"
                            CornerRadius="0,0,8,8"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >

                        <ScrollViewer HorizontalScrollBarVisibility="Auto" 
                                      VerticalScrollBarVisibility="Auto" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >

                            <ItemsPresenter Margin="2"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </ScrollViewer>
                    </Border>
                </Popup>

                <TextBox Name="P_Text"
                         Grid.Column="0"
                         IsReadOnly="True"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         Margin="{TemplateBinding Padding}" 
					     Style="{StaticResource ComboBoxEditableTextBoxGip}" 
                         Foreground="{TemplateBinding Foreground}"
                         Text="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                         Visibility="Hidden" />
                
                <ToggleButton Name="P_Button"
                              Grid.Column="0" Grid.ColumnSpan="2"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource ComboButtonStyle}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers >
            <Trigger Property="IsEditable" Value="True">
                <Setter TargetName="P_Button" Property="Grid.Column" Value="1" />
                <Setter TargetName="P_Text" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="VBMultiSelectComboBoxStyleGip" TargetType="{x:Type local:VBMultiSelectComboBox}" >
        <Setter Property="Foreground" Value="{StaticResource ComboBoxFgEnabledGip}" />
        <Setter Property="Background" Value="{StaticResource ComboBoxBgEnabledGip}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderEnabledGip}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsEditable" Value="True"  />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource VBMultiSelectComboBoxTemplate}" />
    </Style>
    
</ResourceDictionary>

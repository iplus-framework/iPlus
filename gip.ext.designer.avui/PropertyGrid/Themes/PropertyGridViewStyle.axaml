<ResourceDictionary 
    xmlns="https://github.com/avaloniaui" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:Converters="clr-namespace:gip.ext.designer.avui.Converters"
    xmlns:PropertyGrid="clr-namespace:gip.ext.designer.avui.PropertyGrid"
    xmlns:PropertyGridBase="clr-namespace:gip.ext.design.avui.PropertyGrid;assembly=gip.ext.design.avui"
    xmlns:Controls="clr-namespace:gip.ext.designer.avui.Controls"
    xmlns:Prop="clr-namespace:gip.ext.designer.avui.PropertyGrid">

    <Style x:Key="ExpandButtonStyle" Selector="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="Transparent">
                        <Border Width="9"
                                Height="9"
                                BorderBrush="#FF7898B5"
                                BorderThickness="1"
                                CornerRadius="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="White" Offset=".2" />
                                    <GradientStop Color="#FFC0B7A6" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path Margin="1,1,1,1"
                                  x:Name="ExpandPath"
                                  Fill="Black"
                                  Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for checked state -->
    <Style x:Key="ExpandButtonCheckedStyle" Selector="ToggleButton:checked /template/ Path#ExpandPath">
        <Setter Property="Data" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
    </Style>

    <Style x:Key="MoreButtonStyle" Selector="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="#F9F9F4"
                            BorderThickness="0 0 0 1"
                            BorderBrush="{DynamicResource SystemControlForegroundBaseMediumBrush}">
                        <Path x:Name="arrow"
                              Data="M 0 0 L 5 5 L 10 0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for checked state of more button -->
    <Style x:Key="MoreButtonCheckedStyle" Selector="ToggleButton:checked /template/ Path#arrow">
        <Setter Property="Data" Value="M 0 5 L 5 0 L 10 5" />
    </Style>

    <Style x:Key="CategoryToggleStyle" Selector="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="0 1 0 0" BorderBrush="#ECE9D8">
                        <StackPanel Orientation="Horizontal"
                                    Background="{DynamicResource SystemControlBackgroundChromeMediumBrush}">
                            <ToggleButton Classes="ExpandButtonStyle"
                                          IsChecked="{Binding IsExpanded}"
                                          VerticalAlignment="Center"
                                          Margin="3 0 7 0" />
                            <TextBlock Text="{Binding Name}"
                                       VerticalAlignment="Center"
                                       FontWeight="Bold"
                                       Foreground="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CategoryExpanderStyle" Selector="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <ToggleButton Height="17"
                                      IsChecked="{Binding IsExpanded}"
                                      DockPanel.Dock="Top"
                                      Classes="CategoryToggleStyle" />
                        <ContentPresenter x:Name="ExpandSite"
                                          IsVisible="False" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for expanded state -->
    <Style x:Key="CategoryExpanderExpandedStyle" Selector="Expander:expanded /template/ ContentPresenter#ExpandSite">
        <Setter Property="IsVisible" Value="True" />
    </Style>

    <Style x:Key="MoreExpanderStyle" Selector="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <ToggleButton IsChecked="{Binding $parent[Expander].IsExpanded, Mode=TwoWay}"
                                      Classes="MoreButtonStyle"
                                      DockPanel.Dock="Top"
                                      Height="12" />
                        <ContentPresenter x:Name="ExpandSite"
                                          IsVisible="False" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for expanded state of more expander -->
    <Style x:Key="MoreExpanderExpandedStyle" Selector="Expander:expanded /template/ ContentPresenter#ExpandSite">
        <Setter Property="IsVisible" Value="True" />
    </Style>
    
    <Style x:Key="SelectedImageButton" Selector="RadioButton">
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    
    <!-- RadioButton checked state -->
    <Style x:Key="SelectedImageButtonChecked" Selector="RadioButton:checked">
        <Setter Property="BorderBrush" Value="Blue" />
    </Style>
    
    <!-- RadioButton hover state -->
    <Style x:Key="SelectedImageButtonHover" Selector="RadioButton:pointerover">
        <Setter Property="BorderBrush" Value="DeepSkyBlue" />
    </Style>
    
    <ControlTemplate x:Key="AsGrid" TargetType="Prop:PropertyGridView">
        <DockPanel>
            <Grid DockPanel.Dock="Top"
                  Height="78" 
                  IsVisible="{TemplateBinding FilterVisibility}">
                <TextBlock Text="NameY:"
                           Margin="6,30.275,0,33.948"
                           HorizontalAlignment="Left"
                           Width="32.033" />
                <TextBlock Text="Type:"
                           VerticalAlignment="Top"
                           Margin="6.424,7.998,0,0"
                           Height="13.277" />
                <TextBlock Text="Filter:"
                           HorizontalAlignment="Left"
                           Margin="6,53.553,0,0"
                           VerticalAlignment="Top" />

                <Controls:EnterTextBox x:Name="PART_NameTextBox"
                                       Text="{Binding Name}"
                                       IsEnabled="{Binding IsNameEnabled}"
                                       Margin="44.033,27.275,6,0"
                                       Height="19.277"
                                       VerticalAlignment="Top" />

                <TextBlock Text="{Binding SingleItem.ComponentType.Name}"
                           ToolTip.Tip="{Binding SingleItem.ComponentType}"
                           Margin="44.033,7.998,6,0"
                           Height="13.277"
                           VerticalAlignment="Top" />
                <Controls:EnterTextBox Text="{Binding Filter}"
                                       Margin="44.033,50.553,52,0"
                                       VerticalAlignment="Top"
                                       Height="19.277" />

                <Button x:Name="PART_clearButton"
                        Content="Clear"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Margin="0,49.552,6,0"
                        Height="21.277"
                        Width="40" />
            </Grid>

            <Controls:EnumBar Value="{Binding CurrentTab}"
                              Container="{Binding #c1}"
                              Margin="5 0 0 5"
                              DockPanel.Dock="Top">
                <Controls:EnumBar.ButtonStyle>
                    <Style Selector="ToggleButton">
                        <Setter Property="Width" Value="70" />
                    </Style>
                </Controls:EnumBar.ButtonStyle>
            </Controls:EnumBar>

            <Grid x:Name="c1" Background="White">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Categories}" x:Name="c1Categories"/>
                </ScrollViewer>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Events}" x:Name="c1Events" />
                </ScrollViewer>
                <Thumb x:Name="PART_Thumb"
                       HorizontalAlignment="Left"
                       Width="4"
                       Margin="-2 0 0 0"
                       Cursor="SizeWestEast">
                    <Thumb.RenderTransform>
                        <TranslateTransform X="{Binding FirstColumnWidth, ElementName=root}" />
                    </Thumb.RenderTransform>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </Grid>
        </DockPanel>
    </ControlTemplate>

    <!-- Styles for template triggers replacement -->
    <Style x:Key="AsGridOnlyPropertiesStyle" Selector="Prop|PropertyGridView /template/ ItemsControl#c1Events">
        <Setter Property="IsVisible" Value="False" />
    </Style>

    <Style x:Key="AsGridOnlyEventsStyle" Selector="Prop|PropertyGridView /template/ ItemsControl#c1Categories">
        <Setter Property="IsVisible" Value="False" />
    </Style>

    <ControlTemplate x:Key="AsListbox" TargetType="Prop:PropertyGridView">
        <DockPanel>
            <Grid DockPanel.Dock="Top"
                  Height="78" 
                  IsVisible="{TemplateBinding FilterVisibility}">
                <TextBlock Text="NameY:"
                           Margin="6,30.275,0,33.948"
                           HorizontalAlignment="Left"
                           Width="32.033" />
                <TextBlock Text="Type:"
                           VerticalAlignment="Top"
                           Margin="6.424,7.998,0,0"
                           Height="13.277" />
                <TextBlock Text="Filter:"
                           HorizontalAlignment="Left"
                           Margin="6,53.553,0,0"
                           VerticalAlignment="Top" />

                <Controls:EnterTextBox x:Name="PART_NameTextBox"
                                       Text="{Binding Name}"
                                       IsEnabled="{Binding IsNameEnabled}"
                                       Margin="44.033,27.275,6,0"
                                       Height="19.277"
                                       VerticalAlignment="Top" />

                <TextBlock Text="{Binding SingleItem.ComponentType.Name}"
                           ToolTip.Tip="{Binding SingleItem.ComponentType}"
                           Margin="44.033,7.998,6,0"
                           Height="13.277"
                           VerticalAlignment="Top" />
                <Controls:EnterTextBox Text="{Binding Filter}"
                                       Margin="44.033,50.553,52,0"
                                       VerticalAlignment="Top"
                                       Height="19.277" />

                <Button x:Name="PART_clearButton"
                        Content="Clear"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Margin="0,49.552,6,0"
                        Height="21.277"
                        Width="40" />
            </Grid>

            <Controls:EnumBar Value="{Binding CurrentTab}"
                              Container="{Binding #c1}"
                              Margin="5 0 0 5"
                              DockPanel.Dock="Top">
                <Controls:EnumBar.ButtonStyle>
                    <Style Selector="ToggleButton">
                        <Setter Property="Width" Value="70" />
                    </Style>
                </Controls:EnumBar.ButtonStyle>
            </Controls:EnumBar>

            <Grid x:Name="c1" Background="White">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Categories}" x:Name="c1Categories" />
                </ScrollViewer>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Events}" x:Name="c1Events" />
                </ScrollViewer>
                <Thumb x:Name="PART_Thumb"
                       HorizontalAlignment="Left"
                       Width="4"
                       Margin="-2 0 0 0"
                       Cursor="SizeWestEast">
                    <Thumb.RenderTransform>
                        <TranslateTransform X="{Binding FirstColumnWidth, ElementName=root}" />
                    </Thumb.RenderTransform>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </Grid>
        </DockPanel>
    </ControlTemplate>

    <!-- Data Templates -->
    <DataTemplate DataType="PropertyGridBase:Category">
        <Expander Header="{Binding Name}"
                  Classes="CategoryExpanderStyle"
                  IsExpanded="{Binding IsExpanded}"
                  IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
            <ItemsControl ItemsSource="{Binding Properties}" />
        </Expander>
    </DataTemplate>

    <DataTemplate DataType="PropertyGridBase:Category" x:Key="CategoryListBoxTemplate">
        <Expander Header="{Binding Name}"
                  Classes="CategoryExpanderStyle"
                  IsExpanded="{Binding IsExpanded}"
                  IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
            <ListBox ItemsSource="{Binding Properties}" SelectedItem="{Binding SelectedNode, Mode=OneWayToSource}" />
        </Expander>
    </DataTemplate>

    <DataTemplate DataType="PropertyGridBase:PropertyNode">
        <StackPanel IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
            <Border x:Name="uxPropertyNodeRow"
                    MinHeight="20"
                    BorderThickness="0 0 0 1"
                    BorderBrush="{DynamicResource SystemControlForegroundBaseMediumBrush}">
                <DockPanel>
                    <DockPanel Width="{Binding $parent[PropertyGrid:PropertyGridView].FirstColumnWidth}"
                               DockPanel.Dock="Left">
                        <ToggleButton x:Name="expandButton"
                                      DockPanel.Dock="Left"
                                      Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}"
                                      Classes="ExpandButtonStyle"
                                      IsChecked="{Binding IsExpanded}"
                                      IsVisible="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
                        <TextBlock Text="{Binding Name}"
                                   TextTrimming="CharacterEllipsis"
                                   VerticalAlignment="Center"
                                   Margin="7 0 0 0"
                                   ToolTip.Tip="{Binding Description}"
                                   FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}"
                                   Foreground="{Binding NameForeground}" />
                    </DockPanel>
                    <Border BorderThickness="1 0 0 0"
                            BorderBrush="{DynamicResource SystemControlForegroundBaseMediumBrush}">
                        <ContentPresenter x:Name="editorContainer"
                                          Content="{Binding Editor}"
                                          VerticalAlignment="Center"
                                          Margin="3 0" />
                    </Border>
                </DockPanel>
            </Border>
            <StackPanel IsVisible="{Binding IsExpanded, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                <ItemsControl ItemsSource="{Binding Children}"
                              IsVisible="{Binding Children.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}" />
                <Expander IsVisible="{Binding MoreChildren.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}"
                          Classes="MoreExpanderStyle">
                    <ItemsControl ItemsSource="{Binding MoreChildren}"
                                  Background="#F9F9F4" />
                </Expander>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="PropertyGridBase:PropertyNode" x:Key="PropertyNodeListBoxTemplate">
        <StackPanel IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
            <Border x:Name="uxPropertyNodeRow"
                    MinHeight="20"
                    BorderThickness="0 0 0 1"
                    BorderBrush="{DynamicResource SystemControlForegroundBaseMediumBrush}">
                <DockPanel>
                    <DockPanel Width="{Binding $parent[PropertyGrid:PropertyGridView].FirstColumnWidth}"
                               DockPanel.Dock="Left">
                        <ToggleButton x:Name="expandButton"
                                      DockPanel.Dock="Left"
                                      Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}"
                                      Classes="ExpandButtonStyle"
                                      IsChecked="{Binding IsExpanded}"
                                      IsVisible="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
                        <TextBlock Text="{Binding Name}"
                                   TextTrimming="CharacterEllipsis"
                                   VerticalAlignment="Center"
                                   Margin="7 0 0 0"
                                   ToolTip.Tip="{Binding Description}"
                                   FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}"
                                   Foreground="{Binding NameForeground}" />
                    </DockPanel>
                </DockPanel>
            </Border>
        </StackPanel>
    </DataTemplate>

    <!-- Styles for disabled state -->
    <Style x:Key="PropertyNodeDisabledStyle" Selector="ContentPresenter#editorContainer">
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>

    <!-- Main styles for PropertyGridView -->
    <Style Selector="Prop|PropertyGridView">
        <Setter Property="Template" Value="{StaticResource AsGrid}" />
    </Style>

    <Style Selector="Prop|PropertyGridView.AsListbox">
        <Setter Property="Template" Value="{StaticResource AsListbox}" />
    </Style>

    <!-- Styles for invalid name states -->
    <Style Selector="TextBox.InvalidName">
        <Setter Property="BorderBrush" Value="Red" />
    </Style>

    <Style Selector="TextBox.InvalidEmptyEventName">
        <Setter Property="BorderBrush" Value="Red" />
    </Style>

</ResourceDictionary>
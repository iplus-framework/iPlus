<ResourceDictionary 
    xmlns="https://github.com/avaloniaui" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:Converters="clr-namespace:gip.ext.designer.avui.Converters"
    xmlns:PropertyGrid="clr-namespace:gip.ext.designer.avui.PropertyGrid"
    xmlns:PropertyGridBase="clr-namespace:gip.ext.design.avui.PropertyGrid;assembly=gip.ext.design.avui"
    xmlns:Controls="clr-namespace:gip.ext.designer.avui.Controls"
    xmlns:Prop="clr-namespace:gip.ext.designer.avui.PropertyGrid">

  <ControlTheme x:Key="{x:Type PropertyGrid:PropertyGridView}" TargetType="PropertyGrid:PropertyGridView">
    <Setter Property="Background" Value="{DynamicResource SystemAccentColor}" />
    <Setter Property="Template">
      <ControlTemplate TargetType="PropertyGrid:PropertyGridView">
        <DockPanel LastChildFill="True" Background="{TemplateBinding Background}">
          <DockPanel.DataTemplates>
            <DataTemplate DataType="PropertyGridBase:Category">
              <Expander Header="{Binding Name}" Classes="CategoryExpanderStyle" IsExpanded="{Binding IsExpanded}" IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                <ItemsControl ItemsSource="{Binding Properties}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </Expander>
            </DataTemplate>
            <DataTemplate DataType="PropertyGridBase:PropertyNode">
              <StackPanel IsVisible="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                <Border x:Name="uxPropertyNodeRow" MinHeight="20" BorderThickness="0 0 0 1" BorderBrush="Gray" DockPanel.Dock="Top">
                  <DockPanel>
                    <DockPanel Width="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=PropertyGrid:PropertyGridView}}" DockPanel.Dock="Left">
                      <ToggleButton x:Name="expandButton" DockPanel.Dock="Left" Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}" Classes="ExpandButtonStyle" IsChecked="{Binding IsExpanded}" IsVisible="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
                      <Rectangle Width="8" Height="8" Stroke="Black" Fill="{Binding IsSet, Converter={x:Static Converters:BlackWhenTrue.Instance}}" StrokeThickness="1" DockPanel.Dock="Right" Margin="4,0,4,0" VerticalAlignment="Center" />
                      <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="7 0 0 0" ToolTip.Tip="{Binding Description}" FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}" Foreground="{Binding NameForeground}" />
                    </DockPanel>
                    <Border BorderThickness="1 0 0 0" BorderBrush="Gray">
                      <ContentPresenter x:Name="editorContainer" Content="{Binding Editor}" VerticalAlignment="Center" Margin="3 0" />
                    </Border>
                  </DockPanel>
                </Border>
                <StackPanel IsVisible="{Binding IsExpanded, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
                  <ItemsControl Background="#F9F9F4" IsVisible="{Binding Children.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}" ItemsSource="{Binding Children}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                  <Expander IsVisible="{Binding MoreChildren.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}" Classes="MoreExpanderStyle">
                    <ItemsControl Background="#F9F9F4" ItemsSource="{Binding MoreChildren}">
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <StackPanel />
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                      <ItemsControl.Template>
                        <ControlTemplate>
                          <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
                              <ItemsPresenter />
                            </ScrollViewer>
                          </Border>
                        </ControlTemplate>
                      </ItemsControl.Template>
                    </ItemsControl>
                  </Expander>
                </StackPanel>
              </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="FontFamily">
              <TextBlock Text="{Binding}" Height="15" FontFamily="{Binding}" FontSize="12" />
            </DataTemplate>
          </DockPanel.DataTemplates>
          <Grid DockPanel.Dock="Top" Height="78">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="50" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Background="White" Grid.Column="0" BorderBrush="Black" BorderThickness="1" Width="44" Height="44" HorizontalAlignment="Left" Padding="2" Margin="6,0,0,0">
              <Rectangle>
                <Rectangle.Fill>
                  <VisualBrush Stretch="Uniform" Visual="{Binding SingleItem.Component}" />
                </Rectangle.Fill>
              </Rectangle>
            </Border>
            <TextBlock Grid.Column="1" Text="Name:" Margin="6,30,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
            <TextBlock Grid.Column="1" Text="Type:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6,8,0,0" />
            <TextBlock Grid.Column="1" Text="Filter:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6,54,0,0" />
            <Controls:EnterTextBox Grid.Column="1" x:Name="PART_NameTextBox" Text="{Binding Name}" IsEnabled="{Binding IsNameEnabled}" Margin="44,28,6,0" Height="19.277" VerticalAlignment="Top" Classes="NameTextBoxStyle" />
            <TextBlock Grid.Column="1" Text="{Binding SingleItem.ComponentType.Name}" ToolTip.Tip="{Binding SingleItem.ComponentType}" Margin="44,8,6,0" Height="13.277" VerticalAlignment="Top" />
            <Controls:ClearableTextBox Grid.Column="1" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" Margin="44,52,6,0" VerticalAlignment="Top" Height="19" />
          </Grid>
          <Grid DockPanel.Dock="Top" Height="30">
            <StackPanel Orientation="Horizontal">
              <StackPanel Margin="3" HorizontalAlignment="Left" Orientation="Horizontal">
                <RadioButton Classes="SelectedImageButton" GroupName="SortMode" IsChecked="{Binding GroupMode, Converter={x:Static Converters:EnumBoolean.Instance}, ConverterParameter=GroupByPopularCategorys}" Margin="3,0,0,0" Width="20" Height="20">
                  <Image Source="pack://application:,,,/gip.ext.designer.avui;component/Images/Icons.16x16.Properties.Categorized.png" Stretch="None" />
                </RadioButton>
              </StackPanel>
              <StackPanel Margin="3" HorizontalAlignment="Left" Orientation="Horizontal" IsVisible="{Binding ShowPropertiesEventsSelector, Converter={x:Static Converters:CollapsedWhenFalse.Instance}, ElementName=root}">
                <RadioButton Classes="SelectedImageButton" GroupName="ShowType" IsChecked="{Binding CurrentTab, Converter={x:Static Converters:EnumBoolean.Instance}, ConverterParameter=Properties}" Margin="3,0,0,0" Width="20" Height="20">
                  <Image Source="pack://application:,,,/gip.ext.designer.avui;component/Images/Icons.16x16.Properties.Properties.png" Stretch="None" />
                </RadioButton>
                <RadioButton Classes="SelectedImageButton" GroupName="ShowType" IsChecked="{Binding CurrentTab, Converter={x:Static Converters:EnumBoolean.Instance}, ConverterParameter=Events}" Margin="3,0,0,0" Width="20" Height="20">
                  <Image Source="pack://application:,,,/gip.ext.designer.avui;component/Images/Icons.16x16.Properties.Events.png" Stretch="None" />
                </RadioButton>
              </StackPanel>
            </StackPanel>
          </Grid>
          <Grid x:Name="c1" Background="White">
            <ItemsControl IsVisible="{Binding CurrentTab, Converter={x:Static Converters:EnumVisibility.Instance}, ConverterParameter=Properties}" ItemsSource="{Binding Categories}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.Template>
                <ControlTemplate>
                  <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                    <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
                      <ItemsPresenter />
                    </ScrollViewer>
                  </Border>
                </ControlTemplate>
              </ItemsControl.Template>
            </ItemsControl>
            <ItemsControl IsVisible="{Binding CurrentTab, Converter={x:Static Converters:EnumVisibility.Instance}, ConverterParameter=Events}" ItemsSource="{Binding Events}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.Template>
                <ControlTemplate>
                  <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                    <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
                      <ItemsPresenter />
                    </ScrollViewer>
                  </Border>
                </ControlTemplate>
              </ItemsControl.Template>
            </ItemsControl>
            <Thumb x:Name="PART_Thumb" HorizontalAlignment="Left" Width="4" Margin="-2 0 0 0" Cursor="SizeWE">
              <Thumb.RenderTransform>
                <TranslateTransform X="{Binding FirstColumnWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
              </Thumb.RenderTransform>
              <Thumb.Template>
                <ControlTemplate>
                  <Border Background="Transparent" />
                </ControlTemplate>
              </Thumb.Template>
            </Thumb>
          </Grid>
        </DockPanel>
      </ControlTemplate>
    </Setter>

    <!-- ExpandButton Style -->
    <Style Selector="ToggleButton.ExpandButtonStyle">
      <Setter Property="Focusable" Value="False" />
      <Setter Property="Template">
        <ControlTemplate>
          <Border Background="Transparent">
            <Border Width="9" Height="9" BorderBrush="#FF7898B5" BorderThickness="1" CornerRadius="1">
              <Border.Background>
                <LinearGradientBrush EndPoint="100%,100%" StartPoint="0%,0%">
                  <GradientStop Color="White" Offset=".2" />
                  <GradientStop Color="#FFC0B7A6" Offset="1" />
                </LinearGradientBrush>
              </Border.Background>
              <Path Margin="1,1,1,1" x:Name="ExpandPath" Fill="Black" Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" />
            </Border>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>
    
    <Style Selector="ToggleButton.ExpandButtonStyle:checked /template/ Path#ExpandPath">
      <Setter Property="Data" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
    </Style>

    <!-- MoreButton Style -->
    <Style Selector="ToggleButton.MoreButtonStyle">
      <Setter Property="Focusable" Value="False" />
      <Setter Property="Template">
        <ControlTemplate>
          <Border Background="#F9F9F4" BorderThickness="0 0 0 1" BorderBrush="Gray">
            <Path x:Name="arrow" Data="M 0 0 L 5 5 L 10 0" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="DarkGray" />
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>
    
    <Style Selector="ToggleButton.MoreButtonStyle:checked /template/ Path#arrow">
      <Setter Property="Data" Value="M 0 5 L 5 0 L 10 5" />
    </Style>

    <!-- CategoryToggle Style -->
    <Style Selector="ToggleButton.CategoryToggleStyle">
      <Setter Property="Focusable" Value="False" />
      <Setter Property="Template">
        <ControlTemplate>
          <Border BorderThickness="0 1 0 0" BorderBrush="#ECE9D8">
            <StackPanel Orientation="Horizontal" Background="LightGray">
              <ToggleButton Classes="ExpandButtonStyle" IsChecked="{Binding IsExpanded}" VerticalAlignment="Center" Margin="3 0 7 0" />
              <TextBlock Text="{Binding Name}" VerticalAlignment="Center" FontWeight="Bold" Foreground="DarkGray" />
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>

    <!-- CategoryExpander Style -->
    <Style Selector="Expander.CategoryExpanderStyle">
      <Setter Property="Template">
        <ControlTemplate TargetType="Expander">
          <DockPanel>
            <ToggleButton Height="17" IsChecked="{Binding IsExpanded}" DockPanel.Dock="Top" Classes="CategoryToggleStyle" />
            <ContentPresenter x:Name="ExpandSite" IsVisible="False" />
          </DockPanel>
        </ControlTemplate>
      </Setter>
    </Style>
    
    <Style Selector="Expander.CategoryExpanderStyle:expanded /template/ ContentPresenter#ExpandSite">
      <Setter Property="IsVisible" Value="True" />
    </Style>

    <!-- MoreExpander Style -->
    <Style Selector="Expander.MoreExpanderStyle">
      <Setter Property="Template">
        <ControlTemplate TargetType="Expander">
          <DockPanel>
            <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Classes="MoreButtonStyle" DockPanel.Dock="Top" Height="12" />
            <ContentPresenter x:Name="ExpandSite" IsVisible="False" />
          </DockPanel>
        </ControlTemplate>
      </Setter>
    </Style>
    
    <Style Selector="Expander.MoreExpanderStyle:expanded /template/ ContentPresenter#ExpandSite">
      <Setter Property="IsVisible" Value="True" />
    </Style>

    <!-- SelectedImageButton Style -->
    <Style Selector="RadioButton.SelectedImageButton">
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    
    <Style Selector="RadioButton.SelectedImageButton:checked">
      <Setter Property="BorderBrush" Value="Blue" />
    </Style>
    
    <Style Selector="RadioButton.SelectedImageButton:pointerover">
      <Setter Property="BorderBrush" Value="DeepSkyBlue" />
    </Style>

  </ControlTheme>

</ResourceDictionary>
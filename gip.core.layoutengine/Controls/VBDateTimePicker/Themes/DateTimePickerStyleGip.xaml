<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:local="clr-namespace:gip.core.layoutengine"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <local:InverseBoolConverter x:Key="InverseBoolConverter" />

    <LinearGradientBrush x:Key="PopupDarkBorderBrushGip" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0"/>
        <GradientStop Color="#FF8399A9" Offset="0.375"/>
        <GradientStop Color="#FF718597" Offset="0.375"/>
        <GradientStop Color="#FF617584" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrushGip" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff"/>
                <GradientStop Offset="1" Color="#FFE8E8E8"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="DateTimePickerToggleButtonStyleGip" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <local:VBButtonChrome x:Name="ToggleButtonChrome"
                                                               CornerRadius="0,2.75,2.75,0"
											RenderMouseOver="{TemplateBinding IsMouseOver}"
											RenderPressed="{TemplateBinding IsPressed}" />

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <Grid x:Name="arrowGlyph" IsHitTestVisible="False" Grid.Column="1" Margin="5">
                                <Path Width="7" Height="4" Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" Fill="White"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DateTimePickerTemplateGip" TargetType="{x:Type local:VBDateTimePicker}">
        <Grid x:Name="LayoutRoot" Margin="{TemplateBinding Margin}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ColCaption" Width="{TemplateBinding WidthCaption}" MaxWidth="{TemplateBinding WidthCaptionMax}"></ColumnDefinition>
                <ColumnDefinition x:Name="ColContent" Width="{TemplateBinding WidthContent}" MaxWidth="{TemplateBinding WidthContentMax}"></ColumnDefinition>
                <ColumnDefinition x:Name="ColPadding" Width="{TemplateBinding WidthPadding}" ></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <local:VBTextBlock x:Name="PART_Caption" Margin="0,0,0,0" Grid.Column="0" VerticalAlignment="Center" Text="{TemplateBinding ACCaptionTrans}"></local:VBTextBlock>
            <Border Margin="4,0,0,0" Grid.Column="1" x:Name="Border">
                <Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <local:VBDateTimeUpDown BorderThickness="1,1,0,1" Format="{TemplateBinding Format}" FormatString="{TemplateBinding FormatString}" 
                                                          Value="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ControlMode="{Binding ControlMode, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ToggleButton x:Name="_calendarToggleButton" Grid.Column="1"
                                                  IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource DateTimePickerToggleButtonStyleGip}"
                                                  IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"/>
                    </Grid>
                    <Popup IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}" StaysOpen="False">
                        <Border BorderThickness="1" Background="{StaticResource PopupBackgroundBrushGip}" BorderBrush="{StaticResource PopupDarkBorderBrushGip}" Padding="3">
                            <StackPanel>
                                <Calendar x:Name="Part_Calendar"    
                                                      DisplayDate="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" DisplayDateStart="{TemplateBinding DisplayDateStart}"/>
                                <local:VBDateTimeUpDown x:Name="Part_TimeUpDown" Format="ShortTime" Value="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}}" Background="White" />
                            </StackPanel>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=ShowCaption}" Value="False">
                <Setter TargetName="ColCaption" Property="Width" Value="0"/>
                <Setter TargetName="Border" Property="Margin" Value="0,0,0,0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- =============================================================================== -->
    <!-- DateTimePicker                                                                  -->
    <!-- =============================================================================== -->

    <Style  x:Key="DateTimePickerStyleGip" TargetType="{x:Type local:VBDateTimePicker}">
        <Setter Property="Template" Value="{StaticResource DateTimePickerTemplateGip}" />
    </Style>
</ResourceDictionary>
